{"version":3,"sources":["db.js","settings.js","edit-profile.js","profile.js","sidebar.js","message.js","contact.js","roster.js","groups.js","messages.js","inbox.ts","status.ts","App.js","index.js"],"names":["db","Dexie","version","stores","messages","Settings","client","me","onClose","open","useState","mfa","setMfa","qr","setQr","loading","setLoading","token","setToken","useEffect","a","Auth","currentAuthenticatedUser","user","getPreferredMFA","mfaType","setupTOTP","email","attributes","code","str","onMfaChange","setPreferredMFA","checkToken","verifyTotpToken","then","alert","catch","e","console","log","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","onChange","checked","label","value","size","TextField","sx","my","target","InputProps","endAdornment","Button","disabled","onClick","DialogActions","EditProfile","fullName","setFullName","title","setTitle","phone","setPhone","organization","setOrganization","getVCard","config","jid","res","records","forEach","r","type","Stack","m","display","gap","defaultValue","vCard","publishVCard","initials","u","name","split","slice","map","n","substr","Profile","signOut","activity","jwt","setStatus","anchorEl","setAnchorEl","showSettings","setShowSettings","showProfile","setShowProfile","Boolean","handleClose","statusList","key","color","icon","Circle","ListItem","disablePadding","event","currentTarget","mx","Avatar","ListItemText","primary","primaryTypographyProps","textOverflow","overflow","whiteSpace","secondary","secondaryTypographyProps","Menu","id","MenuItem","ListItemIcon","fontSize","Divider","s","status","updateCaps","sendPresence","legacyCapabilities","disco","getCaps","publish","itemType","timestamp","Date","now","text","prompt","publishActivity","items","route","iconComponent","ContactsIcon","GroupsIcon","ChatIcon","SideBar","setNav","nav","hostname","globalLink","isTokenFound","enableNotifications","Notification","requestPermission","permission","List","flexDirection","width","minWidth","background","i","IconComponent","ListItemButton","window","Link","mt","justifyContent","Chat","message","deleteMessage","isRoom","mine","from","includes","Box","className","blue","p","borderRadius","marginLeft","marginRight","wordBreak","style","toLocaleString","IconButton","ml","componentDecorator","decoratedHref","decoratedText","href","isImage","body","rel","src","alt","maxHeight","isFile","textDecoration","Card","direction","mr","nameFromUrl","createMeeting","API_BASE","url","mstart","parseInt","getTime","formData","FormData","append","toString","fetch","method","headers","Authorization","json","AddUserToRoomPrompt","close","allUsers","room","setUser","Autocomplete","_","options","user_id","renderInput","params","server","setRoomAffiliation","upload","files","Promise","all","Array","f","mediaType","getUploadService","service","getUploadSlot","slot","downloadUrl","download","uploadUrl","Message","members","setMembers","setMessage","uploading","setUploading","showAddUserToRoom","setShowAddUserToRoom","scrollRef","useRef","fileRef","roomListAnchorEl","setRoomListAnchorEl","showRoomList","attachFile","urls","sendMessage","to","useDropzone","onDrop","noClick","noKeyboard","getRootProps","isDragActive","getInputProps","useLiveQuery","where","equals","sortBy","or","and","group","extendedMessages","find","removeContact","leaveRoom","removeRosterItem","unsubscribe","newUUID","crypto","randomUUID","xml","transport","socket","send","invite","uuid","memberList","getRoomMembers","muc","users","closeRoomList","current","scrollTop","scrollHeight","allOtherUsers","filter","flexGrow","Backdrop","px","alignItems","MenuListProps","ref","placeholder","onKeyPress","CircularProgress","flexShrink","click","string","URL","protocol","isUrl","match","test","parts","length","Contact","available","away","unavailable","Popover","anchorOrigin","vertical","horizontal","Badge","componentsProps","badge","backgroundColor","border","height","overlap","badgeContent","invisible","variant","pl","Typography","fontWeight","readOnly","AddRoomPrompt","add","roomName","setRoomName","AddContactPrompt","newContact","setNewContact","userDisplayName","first_name","last_name","Roster","roster","MUC_LIGHT_HOSTNAME","search","setSearch","subNav","setSubNav","showAddContact","setShowAddContact","showAddRoom","setShowAddRoom","tab","setTab","menuAnchorEl","setMenuAnchorEl","showAddMenu","profileAnchorEl","setProfileAnchorEl","focusedUser","setFocusedUser","closeAddMenu","addRoom","joinRoom","configureRoom","fields","filteredRoster","toLowerCase","JSON","stringify","contacts","Paper","borderBottom","borderColor","Tabs","idx","Tab","index","ListItemAvatar","stopPropagation","AddGroupPrompt","setUsers","setType","FormControl","RadioGroup","row","Radio","Select","multiple","input","OutlinedInput","renderValue","selected","flexWrap","Chip","onMouseDown","onDelete","removeUser","groups","concat","updateRosterItem","Group","cursor","g","Groups","privateGroups","showAddGroup","setShowAddGroup","filteredGroups","AddChatPrompt","Messages","showAddChat","setShowAddChat","tos","orderBy","uniqueKeys","froms","jids","v","indexOf","filteredUsers","stanzas","define","element","unread","JXT","attribute","queryid","namespace","path","result","getInbox","sendIQ","inbox","on","msg","emit","NS_VISIONABLE_STATUS","aliases","pubsubItemContentAliases","childText","childInteger","addFeature","NS_PEP_NOTIFY","ns","resource","localStorage","getItem","setItem","initXMPP","password","XMPP","transports","websocket","IncomingInvites","accept","reject","invites","responses","getAllUsers","apiBase","page","ok","current_page","last_page","data","userFullName","display_name","getAccountInfo","getGlobalLink","accountInfo","parse","account_data","App","signOutAWS","setClient","setJwt","setRoster","presence","setPresence","activities","setActivities","setActivity","incomingInvites","setIncomingInvites","inviteResponses","setInviteResponses","setAllUsers","connected","setConnected","setGlobalLink","serviceName","domain","xmppHostname","mucHostname","signIn","username","clear","session","signInUserSession","idToken","jwtToken","xmpp","use","IqInbox","IqStatus","cognitoUsers","extendedUsers","enableKeepAlive","interval","enableCarbons","getRoster","prev","before","after","put","mam","archive","item","delay","forwarded","stamp","acceptSubscription","setTimeout","connect","addEventListener","disconnect","error","extendedRoster","statuses","Object","values","some","every","flat","self","reconnect","useCallback","currentSession","updateConfig","credentials","removeItem","Snackbar","Alert","severity","Context","createContext","HOSTNAME_KEY","AppContainer","setConfig","configure","getServiceConfig","Amplify","region","AWSRegion","userPoolId","AWSUserPoolID","userPoolWebClientId","AWSUserPoolClientID","Provider","Authenticator","components","Header","textAlign","marginBottom","signUpAttributes","loginMechanisms","mode","location","reload","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.ae46fb97.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nconst db = new Dexie('visionable-xmpp-test-app');\n\ndb.version(1).stores({\n  messages: '++id, group, from, to, body, type, timestamp',\n});\n\nexport default db;\n","import { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  FormControlLabel,\n  Button,\n  Checkbox,\n  TextField,\n} from '@mui/material';\n\nimport { QRCodeSVG } from 'qrcode.react'\n\nimport { Auth } from \"aws-amplify\";\n\nconst Settings = ({ client, me, onClose, open }) => {\n  const [mfa, setMfa] = useState(false);\n  const [qr, setQr] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(\"\");\n\n  useEffect(async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const mfaType = await Auth.getPreferredMFA(user);\n    setMfa(mfaType === 'SOFTWARE_TOKEN_MFA')\n    setLoading(false);\n  }, []);\n\n  const setupTOTP = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const { attributes: { email } } = user;\n\n    const code = await Auth.setupTOTP(user);\n    const issuer = \"Visionable\"; // TODO: ?\n    const str = `otpauth://totp/Visionable:${email}?secret=${code}&issuer=${issuer}`;\n    setQr(str);\n  }\n\n  const onMfaChange = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    setMfa(!mfa);\n\n    if (!mfa) {\n      setupTOTP();\n    } else {\n      Auth.setPreferredMFA(user, 'NOMFA');\n    }\n  }\n\n  const onTokenChange = (e) => {\n    setToken(e.target.value);\n  };\n\n  const checkToken = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n\n    Auth.verifyTotpToken(user, token)\n      .then(() => {\n        Auth.setPreferredMFA(user, 'TOTP');\n        alert(\"Successfully enabled MFA\")\n        setQr(null);\n      })\n      .catch((e) => {\n        console.log(\"ERROR\", e);\n        alert(\"Error enabling MFA\");\n      });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Settings</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading</div>\n          : <>\n            <FormControlLabel control={<Checkbox onChange={onMfaChange} checked={mfa} />} label=\"Enable MFA\" />\n\n            {mfa && qr && <>\n              <br />\n              <QRCodeSVG value={qr} size={200} />\n              <br />\n              <TextField\n                sx={{ my: 1 }}\n                onChange={onTokenChange}\n                label=\"Verification Code\"\n                InputProps={{endAdornment: <Button disabled={!token} onClick={checkToken}>Verify</Button>}}\n                />\n              </>}\n          </>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Settings\n","\nimport { useState, useEffect } from 'react';\nimport {\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@mui/material';\n\nconst EditProfile = ({ client, me, onClose, open }) => {\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const save = () => {\n    const vCard = {\n      fullName,\n      title: title,\n      records: [\n        { type: \"tel\", value: phone },\n        { type: \"title\", value: title },\n        { type: \"organization\", value: organization },\n      ],\n    };\n    client.publishVCard(vCard);\n    onClose();\n  };\n\n  useEffect(async () => {\n    if (open) {\n      try {\n        const res = await client.getVCard(client.config.jid);\n        console.log(\"GOT VCARD\", res);\n\n        setFullName(res.fullName || \"\");\n\n        res.records?.forEach(r => {\n          if (r.type === \"tel\") {\n            setPhone(r.value);\n          } else if (r.type === \"title\") {\n            setTitle(r.value);\n          } else if (r.type === \"organization\") {\n            setOrganization(r.value);\n          }\n        });\n\n        setLoading(false);\n      } catch(e) {\n        setLoading(false);\n      }\n    }\n  }, [open]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Profile</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ m: 1, display: 'flex', gap: \"1em\" }}>\n              <TextField onChange={e => setFullName(e.target.value)} label=\"Full Name (TODO)\" defaultValue={fullName} />\n              <TextField onChange={e => setPhone(e.target.value)} label=\"Phone\" defaultValue={phone} />\n              <TextField onChange={e => setOrganization(e.target.value)} label=\"Organization\" defaultValue={organization} />\n              <TextField onChange={e => setTitle(e.target.value)} label=\"Title\" defaultValue={title} />\n            </Stack>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={save}>Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProfile\n","import { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemAvatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemButton from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport Circle from '@mui/icons-material/Circle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport SettingsDialog from './settings';\nimport EditProfileDialog from './edit-profile';\n\nconst Profile = ({ client, me, signOut, activity, jwt }) => {\n  const [, setStatus] = useState(\"available\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeStatus = (status) => {\n    setStatus(status);\n    // client.sendPresence({ status });\n\n    // push it to Frank's Presence API\n    /*\n    fetch(`http://presence-api-lb-1290633754.us-east-1.elb.amazonaws.com/api/presence/status`, {\n      method: 'POST',\n      body: JSON.stringify({ status: status.toUpperCase() }),\n      headers: {\n        Authorization: jwt ,\n        'Content-Type': 'application/json',\n      },\n    })\n    */\n\n    // set PEP Status\n    client.updateCaps();\n    client.sendPresence({\n      legacyCapabilities: client.disco.getCaps() // have to enable this to get PEP notifications\n    });\n\n    client.publish('', 'http://visionable.com/p/status', {\n      itemType: 'http://visionable.com/p/status',\n      status,\n      timestamp: Date.now()\n    });\n  };\n\n  const activityPrompt = () => {\n    const text = prompt(\"Enter a custom message\", activity);\n    client.publishActivity({ text })\n  }\n\n  const editProfile = () => {\n    setShowProfile(true);\n  };\n\n  const statusList = [\n    {\n      key: \"available\",\n      color: \"#53b397\",\n      label: \"Available\",\n      icon: Circle,\n    },\n    {\n      key: \"in-meeting\",\n      color: \"#ea3323\",\n      label: \"In a meeting\",\n      icon: Circle,\n    },\n    {\n      key: \"away\",\n      color: \"#f0a73e\",\n      label: \"Away\",\n      icon: Circle,\n    },\n  ]\n\n  return (\n    <>\n      <ListItem disablePadding>\n        <ListItemButton onClick={handleClick} sx={{ mx: 1 }}>\n          <ListItemAvatar>\n            <Avatar>{initials(me)}</Avatar>\n          </ListItemAvatar>\n        </ListItemButton>\n\n        <ListItemText\n          primary={me.name}\n          primaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          secondary={me.email}\n          secondaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          title={client.config.jid}\n        />\n      </ListItem>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n      >\n        <MenuItem onClick={editProfile}>\n          <ListItemIcon>\n            <AccountBoxIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {me.name}\n        </MenuItem>\n\n        <Divider />\n\n        {statusList.map((s) => (\n          <MenuItem key={s.key} onClick={() => changeStatus(s.key)}>\n            <ListItemIcon>\n              <Circle fontSize=\"small\" sx={{ color: s.color }} />\n            </ListItemIcon>\n\n            <ListItemText primary={s.label} />\n          </MenuItem>\n        ))}\n\n        <MenuItem onClick={activityPrompt}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {activity || <i>Custom message</i>}\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem onClick={() => {setShowSettings(true)}}>\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          Settings\n        </MenuItem>\n\n        <MenuItem onClick={signOut}>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n\n      <SettingsDialog open={showSettings} onClose={() => setShowSettings(false)} client={client} me={me} />\n      <EditProfileDialog open={showProfile} onClose={() => setShowProfile(false)} client={client} me={me} />\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Profile;\n","import { useEffect, useState } from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport {\n  Contacts as ContactsIcon,\n  Groups as GroupsIcon,\n  Chat as ChatIcon,\n  Link as LinkIcon,\n} from \"@mui/icons-material\";\n\nimport Profile from './profile';\n// import { fetchToken } from \"./firebase\";\n\nconst items = [\n  {\n    route: \"contacts\",\n    label: \"Contacts\",\n    iconComponent: ContactsIcon,\n  },\n  {\n    route: \"groups\",\n    label: \"Groups\",\n    iconComponent: GroupsIcon,\n  },\n  {\n    route: \"messages\",\n    label: \"Messages\",\n    iconComponent: ChatIcon,\n  },\n]\n\nconst SideBar = ({ client, me, setNav, nav, signOut, hostname, activity, globalLink, jwt }) => {\n  const [isTokenFound, setTokenFound] = useState(false);\n\n  useEffect(() => {\n    // fetchToken(setTokenFound);\n  }, []);\n\n  const enableNotifications = () => {\n    console.log('Requesting permission...');\n    Notification.requestPermission().then((permission) => {\n    console.log(permission);\n      if (permission === 'granted') {\n        console.log('Notification permission granted.');\n        // fetchToken(setTokenFound);\n      }\n    })\n  };\n\n  return (\n    <List sx={{\n      display: \"flex\",\n        flexDirection: \"column\",\n        width: \"240px\",\n        minWidth: \"240px\",\n        background: \"#091c38\",\n        color: \"white\"\n    }}>\n    <Profile client={client} me={me} signOut={signOut} activity={activity} jwt={jwt} />\n\n    {items.map(i => {\n      const IconComponent = i.iconComponent;\n\n      return (\n        <ListItem key={i.route} disablePadding sx={{ background: nav === i.route ? 'rgba(255,255,255,0.1)' : 'transparent' }}>\n        <ListItemButton onClick={() => setNav(i.route)}>\n        <ListItemIcon>\n        <IconComponent sx={{ color: \"white\" }} />\n        </ListItemIcon>\n\n        <ListItemText>\n        {i.label}\n        </ListItemText>\n        </ListItemButton>\n        </ListItem>\n      )})}\n\n    {globalLink && (\n      <ListItem disablePadding>\n      <ListItemButton onClick={() => window.open(globalLink)}>\n      <ListItemIcon>\n      <LinkIcon sx={{ color: \"white\" }} />\n      </ListItemIcon>\n\n      <ListItemText>Global Link</ListItemText>\n      </ListItemButton>\n      </ListItem>\n    )}\n\n    {isTokenFound &&\n        <ListItem onClick={enableNotifications}>Notifications enabled</ListItem>}\n\n    {!isTokenFound &&\n        <ListItem onClick={enableNotifications}>Enable Notifications</ListItem>}\n\n    <ListItem sx={{ mt: \"auto\", justifyContent: \"center\", color: \"#bbb\" }}>\n    {hostname}\n    </ListItem>\n    </List>\n  );\n};\n\nexport default SideBar;\n","import {\n  Box,\n  Button,\n  Card,\n  Stack,\n  TextField,\n  IconButton,\n  Autocomplete,\n  Menu,\n  MenuItem,\n  Divider,\n  Backdrop,\n} from \"@mui/material\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDropzone } from 'react-dropzone'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { blue } from \"@mui/material/colors\";\n\nimport Linkify from 'react-linkify';\n// import { ReactTinyLink } from 'react-tiny-link'\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport db from './db';\n\nconst Message = ({ client, user, API_BASE, jwt, allUsers }) => {\n  const [members, setMembers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [showAddUserToRoom, setShowAddUserToRoom] = useState(false);\n  const scrollRef = useRef(null);\n  const fileRef = useRef(null);\n\n  const [roomListAnchorEl, setRoomListAnchorEl] = useState(null);\n  const showRoomList = Boolean(roomListAnchorEl);\n\n  const attachFile = async (files) => {\n    setUploading(true);\n    // upload all the files and get their URLs\n    const urls = await upload(files, client);\n    console.log('urls', urls);\n\n    // send out the notifications\n    urls.forEach((url) => {\n      if (url) {\n        const type = user.isRoom ? 'groupchat' : 'chat';\n        client.sendMessage({ to: user.jid, body: url, type });\n      } else {\n        console.log(\"upload failed\");\n      }\n    });\n    setUploading(false);\n  };\n\n  const onDrop = (files) => {\n    console.log(\"dropped files\", files);\n    attachFile(files);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, noClick: true, noKeyboard: true });\n\n  const messages = useLiveQuery(() =>\n    user.isRoom\n      ? db.messages.where(\"group\").equals(user.jid).sortBy(\"timestamp\")\n      : db.messages.where(\"from\").equals(user.jid).or(\"to\").equals(user.jid).and((m) => !m.group).sortBy(\"timestamp\"),\n    [user], []);\n\n  const extendedMessages = messages\n    .map((message) => { // add user info\n      const user = allUsers.find((u) => message.from?.includes(u.user_id));\n      const name = user?.name || message.from;\n\n      return { ...message, user, name };\n    });\n\n  const removeContact = async () => {\n    if (user.isRoom) {\n      await client.setRoomAffiliation(user.jid, client.config.jid, \"none\");\n      await client.leaveRoom(user.jid);\n    } else {\n      await client.removeRosterItem(user.jid);\n      await client.unsubscribe(user.jid);\n    }\n  };\n\n  const sendMessage = () => {\n    if (!message) {\n      return;\n    }\n\n    const type = user.isRoom ? 'groupchat' : 'chat';\n    client.sendMessage({ to: user.jid, body: message, type, from: client.config.jid });\n    setMessage(\"\");\n  };\n\n  const deleteMessage = (m) => {\n    console.log(\"deleting message\", m);\n    console.log(\"user\", user);\n    // retract is just for pubsub. damn\n    // client.retract(user.jid, \"saas-msg.visionable.ltd\", m.id, true); // jid, node, id, notify\n    const newUUID = crypto.randomUUID();\n    const xml = `<message type=\"chat\" to=\"${user.jid}\" id=\"${newUUID}\">\n      <apply-to id=\"${m.id}\" xmlns=\"urn:xmpp:fasten:0\">\n        <retract xmlns='urn:xmpp:message-retract:0'/>\n      </apply-to>\n      <fallback xmlns=\"urn:xmpp:fallback:0\"/>\n      <body>This person attempted to retract a previous message, but it's unsupported by your client.</body>\n      <store xmlns=\"urn:xmpp:hints\"/>\n    </message>`;\n\n    console.log(\"xml\", xml);\n    client.transport.socket.send(xml);\n  };\n\n  const invite = async () => {\n    const body = await createMeeting(API_BASE, jwt);\n    if (body.uuid) {\n      client.sendMessage({ to: user.jid, body: body.uuid, type: 'meeting-invite' });\n    }\n  };\n\n  const memberList = async (event) => {\n    const res = await client.getRoomMembers(user.jid);\n\n    setMembers(res.muc.users.map((m) => ({\n      ...m,\n      name: allUsers.find((u) => m.jid.includes(u.user_id))?.name,\n    })));\n\n    setRoomListAnchorEl(event.target);\n  };\n\n  const closeRoomList = () => setRoomListAnchorEl(null);\n  const openAddUser = () => {\n    closeRoomList();\n    setShowAddUserToRoom(true);\n  }\n\n  useEffect(() => {\n    scrollRef.current.scrollTop = scrollRef?.current?.scrollHeight;\n  }, [messages]);\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <Stack sx={{ flexGrow: 1 }} {...getRootProps()}>\n      <AddUserToRoomPrompt\n        client={client}\n        room={user}\n        open={showAddUserToRoom}\n        close={() => setShowAddUserToRoom(false)}\n        allUsers={allOtherUsers}\n      />\n\n      <Backdrop open={isDragActive} sx={{ color: \"white\" }}><h3>Drop files to upload</h3></Backdrop>\n\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{user.name}</h2>\n\n        <IconButton sx={{ ml: \"auto\" }} onClick={removeContact} title={user.isRoom ? \"Leave Group\" : \"Remove Contact\"}>\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n\n        {user.isRoom && <>\n          <IconButton onClick={memberList}>\n            <GroupAddIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={roomListAnchorEl}\n            open={showRoomList}\n            onClose={closeRoomList}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {members.map((m) => (\n              <MenuItem key={m.jid}>{m.name}</MenuItem>\n            ))}\n            <Divider />\n            <MenuItem onClick={openAddUser}>Add</MenuItem>\n          </Menu>\n        </>}\n\n        <IconButton onClick={invite}>\n          <VideoCameraFrontIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }} ref={scrollRef}>\n        {extendedMessages.map(m => <Chat key={m.id} message={m} client={client} isRoom={user.isRoom} deleteMessage={deleteMessage} />)}\n      </Stack>\n\n      <Stack direction=\"row\" sx={{ p: 1 }}>\n        <TextField\n          onChange={(e) => setMessage(e.target.value)}\n          value={message}\n          sx={{ flexGrow: 1 }}\n          placeholder=\"Send a message...\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n          InputProps={{\n            endAdornment: <>\n              {uploading\n                ? <CircularProgress />\n                : <IconButton style={{ flexShrink: \"0\" }} onClick={() => fileRef.current.click()}>\n                  <AttachFileIcon fontSize=\"inherit\" />\n                  <input\n                    disabled={uploading}\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    ref={fileRef}\n                    onChange={(e) => attachFile(e.target.files)}\n                  />\n                </IconButton>}\n              <Button onClick={sendMessage}>Send</Button>\n            </>\n          }}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n\nconst Chat = ({ message, client, isRoom, deleteMessage }) => {\n  const mine = !message.from || message.from.includes(client.config.jid);\n\n  // if we're in a room, grab the user's jid from the `from` field\n  // if it's a direct chat, grab just the bare JID\n  // const jid = message.from?.split(\"/\")[isRoom ? 1 : 0];\n\n  return (\n    <Box\n      className={`chat-message ${mine ? \"mine\" : \"\"}`}\n      sx={{\n        background: mine ? blue[700] : \"white\",\n        color: mine ? \"white\" : \"black\",\n        p: 1.5,\n        mx: 2, my: 1,\n        borderRadius: 2,\n        marginLeft: mine ? \"auto\" : 0,\n        marginRight: mine ? 0 : \"auto\",\n        wordBreak: \"break-all\",\n      }}\n    >\n      <span style={{ fontSize: \"0.8em\" }}>\n        <b>{message.name}</b>\n        <span style={{ marginLeft: \"1em\", color: mine ? \"#eee\" : \"#666\" }}>{message.timestamp?.toLocaleString()}</span>\n        {mine && <IconButton size=\"small\" onClick={() => deleteMessage(message)}><DeleteIcon sx={{ color: \"white\", ml: 1 }} fontSize=\"inherit\" /></IconButton>}\n      </span>\n      <br />\n      <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n        <a target=\"blank\" href={decoratedHref} key={key} style={{ color: \"inherit\" }}>\n          {decoratedText}\n        </a>\n      )}>\n        {isImage(message.body) && <div>\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\">\n            <img src={message.body} alt=\"\" style={{ maxHeight: \"50vh\", maxWidth: \"70%\" }} />\n          </a>\n        </div>}\n\n        {isFile(message.body) && !isImage(message.body) && (\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: \"none\" }}>\n            <Card sx={{ background: \"#eee\", p: 1, mt: 1 }}>\n              <Stack direction=\"row\">\n                <FileDownloadIcon sx={{ mr: 1 }} />{nameFromUrl(message.body)}\n              </Stack>\n            </Card>\n          </a>\n        )}\n\n        {!isImage(message.body) && !isFile(message.body) && message.body}\n      </Linkify>\n    </Box>\n  );\n}\n\nasync function createMeeting(API_BASE, jwt) {\n  const url = `${API_BASE}/api/meetings`;\n  const mstart = parseInt(new Date().getTime() / 1000);\n\n  const formData = new FormData();\n  formData.append(\"name\", \"Instant Meeting\");\n  formData.append(\"mstart\", mstart.toString());\n  formData.append(\"duration\", \"3600\");\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: jwt,\n    },\n    body: formData,\n  }).then(res => res.json());\n};\n\nconst AddUserToRoomPrompt = ({ open, close, allUsers, client, room }) => {\n  const [user, setUser] = useState(\"\");\n\n  const onAdd = () => {\n    const jid = `${user}@${client.config.server}`;\n    client.setRoomAffiliation(room.jid, jid, \"member\")\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add User to Room</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setUser(u.id)}\n          options={allUsers.map(u => ({\n            label: `${u.name} (${u.email})`,\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst upload = async (files, client) => {\n  return await Promise.all(Array.from(files).map(async (f) => {\n    const { name, size, type: mediaType } = f; // TODO files with spaces in name fail\n    const service = await client.getUploadService();\n    const slot = await client.getUploadSlot(service.jid, { name, size, mediaType })\n    const { download: downloadUrl, upload: { url: uploadUrl } } = slot;\n    try {\n      await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: f,\n        headers: { \"x-amz-acl\": \"public-read\" },\n      });\n      return downloadUrl;\n    } catch (e) {\n      return null;\n    }\n  }));\n};\n\nexport default Message;\n\nfunction isUrl(string) {\n  let url;\n\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction isFile(string) {\n  return isUrl(string) && string.match(/amazonaws.*fileshare/);\n}\n\nfunction isImage(url) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n}\n\nfunction nameFromUrl(url) {\n  const parts = url.split(\"/\");\n  return parts[parts.length - 1];\n}\n\n","import { useState, useEffect } from \"react\";\n\nimport {\n  Popover,\n  Badge,\n  Box,\n  Stack,\n  Avatar,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nconst Contact = ({ client, anchorEl, user, onClose }) => {\n  console.log(\"rendering Contact card\", user);\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const open = Boolean(anchorEl);\n\n  useEffect(async () => {\n    try {\n      const res = await client.getVCard(user.jid);\n      console.log('got user vcard', res);\n\n      setFullName(res.fullName || \"\");\n\n      res.records?.forEach(r => {\n        if (r.type === \"tel\") {\n          setPhone(r.value);\n        } else if (r.type === \"title\") {\n          setTitle(r.value);\n        } else if (r.type === \"organization\") {\n          setOrganization(r.value);\n        }\n      });\n\n      setLoading(false);\n    } catch(e) {\n      setLoading(false);\n    }\n\n  }, [anchorEl]);\n\n  const status = user.isRoom ? '' : user.status;\n  const color = {\n    available: \"#51b397\",\n    away: \"#f0a73e\",\n    unavailable: \"gray\",\n    \"in-meeting\": \"#ea3323\",\n  }[status] || \"gray\";\n\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Stack direction=\"row\">\n          <Badge\n            componentsProps={{\n              badge: {\n                sx: {\n                  backgroundColor: color,\n                  border: \"2px solid white\",\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                },\n              },\n            }}\n            overlap=\"circular\"\n            badgeContent=\" \"\n            invisible={true}\n            variant=\"dot\"\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n          >\n            <Avatar sx={{ width: 56, height: 56 }}>\n              {user.isRoom\n                ? <GroupsIcon />\n                : initials(user)}\n            </Avatar>\n          </Badge>\n          \n          <Box sx={{ pl: 2 }}>\n            <Typography sx={{ fontWeight: 'bold', p: 0, m: 0 }}>{user.name}</Typography>\n            {!user.isRoom && <div>{user.status}</div>}\n            {!user.isRoom && <div>{user.user.email}</div>}\n          </Box>\n        </Stack>\n\n        <br />\n\n        <div>{user.activity}</div>\n\n        <br />\n\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ display: 'flex', gap: \"1em\" }}>\n            {false && fullName && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Full Name (TODO)\" defaultValue={fullName} />}\n            {phone && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Phone\" defaultValue={phone} />}\n            {organization && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Organization\" defaultValue={organization} />}\n            {title && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Title\" defaultValue={title} />}\n          </Stack>}\n      </Box>\n    </Popover>\n  );\n};\n\nexport default Contact;\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\n","import { useState } from \"react\";\n\nimport {\n  Badge,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  Avatar,\n  ListItemText,\n  TextField,\n  Paper,\n  Stack,\n  Autocomplete,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tabs,\n  Tab\n} from \"@mui/material\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from './message';\nimport Contact from './contact';\n\nconst AddRoomPrompt = ({ open, close, add }) => {\n  const [roomName, setRoomName] = useState(\"\");\n\n  const onAdd = () => {\n    add(roomName);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          sx={{ width: 400, my: 1 }}\n          onChange={(e) => setRoomName(e.target.value)}\n          label=\"Group name\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst AddContactPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Contact</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map((u) => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use teh name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Roster = ({\n  roster,\n  client,\n  allUsers,\n  API_BASE,\n  MUC_LIGHT_HOSTNAME,\n  jwt,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showAddRoom, setShowAddRoom] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const showAddMenu = Boolean(menuAnchorEl);\n\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\n  const [focusedUser, setFocusedUser] = useState(null);\n\n  const openAddMenu = (event) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const closeAddMenu = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const openContact = (event, user) => {\n    event.stopPropagation();\n    setFocusedUser(user);\n    setProfileAnchorEl(event.currentTarget);\n  }\n\n  const addContact = (uuid) => {\n    try {\n      fetch(`${API_BASE}/api/users/contacts`, {\n        method: \"POST\",\n        headers: {\n          Authorization: jwt,\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({ contacts: [uuid] }),\n      })\n    } catch (e) {\n      alert(\"Error adding contact\");\n    }\n  }\n\n  // TODO: this will use the Room API in the future\n  const addRoom = async (name) => {\n    const uuid = crypto.randomUUID();\n    const jid = `${uuid}@${MUC_LIGHT_HOSTNAME}`;\n    await client.joinRoom(jid);\n    client.configureRoom(jid, { fields: [{ name: 'roomname', value: name }] });\n  }\n\n  // filter by search\n  const filteredRoster = roster.filter(r =>\n    r.name?.toLowerCase().includes(search.toLowerCase()) || r.jid?.includes(search))\n    .filter(r => (tab === 0 && !r.isRoom) || (tab === 1 && r.isRoom));\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <>\n      <AddContactPrompt\n        add={addContact}\n        close={() => setShowAddContact(false)}\n        open={showAddContact}\n        allUsers={allOtherUsers}\n      />\n\n      <AddRoomPrompt\n        add={addRoom}\n        close={() => setShowAddRoom(false)}\n        open={showAddRoom}\n      />\n\n      {profileAnchorEl && focusedUser &&\n        <Contact client={client} user={focusedUser} anchorEl={profileAnchorEl} onClose={() => setProfileAnchorEl(null)} />}\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Contacts</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={openAddMenu}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={menuAnchorEl}\n              open={showAddMenu}\n              onClose={closeAddMenu}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button',\n              }}\n            >\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddContact(true) }}>Add Contact</MenuItem>\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddRoom(true) }}>Add Group</MenuItem>\n            </Menu>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Contacts\" index={0} />\n            <Tab label=\"MUCs\" index={1} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredRoster.map((u) => {\n            const status = u.isRoom ? '' : u.status;\n            const color = {\n              available: \"#51b397\",\n              away: \"#f0a73e\",\n              unavailable: \"gray\",\n              \"in-meeting\": \"#ea3323\",\n            }[status] || \"gray\";\n\n            return (\n              <ListItem key={u.jid} disablePadding>\n                <ListItemButton onClick={() => setSubNav(u)}>\n                  <ListItemAvatar>\n                    <Badge\n                      componentsProps={{\n                        badge: {\n                          sx: {\n                            backgroundColor: color,\n                            border: \"2px solid white\",\n                            width: 14,\n                            height: 14,\n                            borderRadius: 7,\n                          },\n                        },\n                      }}\n                      overlap=\"circular\"\n                      badgeContent=\" \"\n                      invisible={u.isRoom}\n                      variant=\"dot\"\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                    >\n                      <Avatar onClick={(e) => openContact(e, u)}>\n                        {u.isRoom\n                          ? <GroupsIcon />\n                          : initials(u)}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n\n                  <ListItemText\n                    primary={<>{u.name} {!u.isRoom ? <span style={{ color: \"#888\" }}>- {u.user?.email}</span> : ''}</>}\n                    primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                    secondary={u.activity ? u.activity : \"\"}\n                    secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  />\n                </ListItemButton>\n              </ListItem>\n            )\n          })}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Roster;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  OutlinedInput,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Chip,\n  Tabs,\n  Tab,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst AddGroupPrompt = ({ open, close, allUsers, roster, client }) => {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [type, setType] = useState(\"private\");\n\n  const onAdd = () => {\n    users.forEach((u) => {\n      // add this group to this user's existing groups\n      const groups = roster.find(i => i.jid.includes(u))?.groups?.concat([title]) || [title];\n      client.updateRosterItem({ jid: u, groups });\n    });\n    setUsers([]);\n    setTitle(\"\");\n    close();\n  }\n\n  const handleUserChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setUsers(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const removeUser = (value) => {\n    setUsers(users.filter(u => u !== value));\n    // TODO\n    console.log(\"removeUser\", value);\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>New Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          type=\"text\"\n          label=\"Title\"\n          variant=\"outlined\"\n          fullWidth\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          sx={{ my: 1 }}\n          />\n\n        <FormControl sx={{ my: 1 }}>\n          <RadioGroup row value={type} onChange={(e) => setType(e.target.value)}>\n            <FormControlLabel value=\"private\" control={<Radio />} label=\"Private\" />\n            <FormControlLabel disabled value=\"public\" control={<Radio />} label=\"Public\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Select\n          sx={{ my: 1 }}\n          fullWidth\n          multiple\n          value={users}\n          onChange={handleUserChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} onMouseDown={(e) => e.stopPropagation()} onDelete={() => removeUser(value)} />\n              ))}\n            </Box>\n          )}\n        >\n          {roster.filter(i => !i.isRoom).map((user) => (\n            <MenuItem\n              key={user.jid}\n              value={user.jid}\n            >\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst Group = ({ group, roster, client }) => {\n  if (!group) { return null; }\n\n  const editTitle = () => {\n    const title = prompt(\"New Title\", group.name); // TODO make sure name isn't taken\n\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups, including this one\n        .filter(g => g !== group.name) // remove the previous group name\n        .concat([title]); // add the new name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  };\n\n  const deleteGroup = () => {\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups\n        .filter(g => g !== group.name) // remove this group name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  }\n\n  return <div>\n    <Stack sx={{ flexGrow: 1 }}>\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{group.name}</h2>\n        <EditIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={editTitle} />\n        <DeleteIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={deleteGroup} />\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }}>\n        <List>\n          {group.users.map(u => (\n            <ListItem key={u.jid}>\n              {u.name}\n            </ListItem>\n          ))}\n        </List>\n      </Stack>\n    </Stack>\n  </div>;\n}\n\nconst Groups = ({ client, allUsers, roster, jwt, API_BASE, privateGroups }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [tab, setTab] = useState(0);\n  const [showAddGroup, setShowAddGroup] = useState(false);\n\n  const filteredGroups = privateGroups?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s);\n  });\n\n  return (\n    <>\n      <AddGroupPrompt\n        close={() => setShowAddGroup(false)}\n        open={showAddGroup}\n        allUsers={allUsers}\n        roster={roster}\n        client={client}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Groups</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={() => setShowAddGroup(true)}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Private\" index={0} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredGroups.map((g) => (\n            <ListItem key={g.name} disablePadding>\n              <ListItemButton onClick={() => setSubNav(g)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {initials(g)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={g.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={g.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={g.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        <Group group={subNav} roster={roster} client={client} />\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Groups;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Autocomplete,\n} from \"@mui/material\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from \"./message\";\n\nimport db from \"./db\";\n\nconst AddChatPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Find a User</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map(u => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use the name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Messages = ({ client, allUsers, roster, jwt, API_BASE }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddChat, setShowAddChat] = useState(false);\n\n  // pull out all of the unique IDs from all of the messages\n  const tos = useLiveQuery(() => db.messages.orderBy(\"to\").uniqueKeys()) || [];\n  const froms = useLiveQuery(() => db.messages.orderBy(\"from\").uniqueKeys()) || [];\n  const groups = useLiveQuery(() => db.messages.orderBy(\"group\").uniqueKeys()) || [];\n  const jids = tos.concat(froms).concat(groups)\n  .filter((v, i, a) => a.indexOf(v) === i) // all unique jids\n  .filter((jid) => jid !== client.config.jid); // that aren't you\n\n  const users = jids?.map(jid => { // add names\n    const user = allUsers.find((u) => jid.includes(u.user_id));\n    const name = user?.name // user names come from all users\n      || roster.find((r) => r.jid === jid)?.name // room names will be in your roster\n      || jid;\n    const isRoom = groups.includes(jid);\n\n    return { jid, user, name, isRoom };\n  });\n\n  const filteredUsers = users?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s)\n      || s.includes(u.name?.toLowerCase())\n      || u.user?.email?.includes(s)\n      || s.includes(u.user?.email);\n  });\n\n  const addChat = (uuid) => {\n    console.log(\"addChat\", uuid);\n    const jid = `${uuid}@${client.config.server}`;\n    console.log(\"jid\", jid);\n    // TODO\n  };\n\n  return (\n    <>\n      <AddChatPrompt\n        add={addChat}\n        close={() => setShowAddChat(false)}\n        open={showAddChat}\n        allUsers={allUsers}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Chat</h2>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredUsers.map((u) => (\n            <ListItem key={u.jid} disablePadding>\n              <ListItemButton onClick={() => setSubNav(u)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {u.isRoom\n                      ? <GroupsIcon />\n                      : initials(u)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={u.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={u.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={u.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Messages;\n","import { Agent, JXT } from 'stanza';\nimport { IQ, ReceivedMessage } from 'stanza/protocol';\n\n// 1. Declare our new custom stanza extension type\nexport interface InboxMessage extends ReceivedMessage {\n  result?: InboxResult;\n}\n\nexport interface InboxResult {\n  forwarded?: InboxMessage;\n}\n\nexport interface InboxMessage {\n  message?: string;\n}\n\n// 2. Begin injecting our plugin's type information into StanzaJS.\ndeclare module 'stanza' {\n\n    // 3. Declare a new method for the StanzaJS agent\n    export interface Agent {\n        getInbox(): Promise<IQ>\n    }\n\n    // 4. Declare our event types. (Event names are the fields in AgentEvents.)\n    export interface AgentEvents {\n      inbox: InboxMessage;\n    }\n\n    // 5. Stanza definitions MUST be placed in the Stanzas namespace\n    namespace Stanzas {\n\n        // 6. Attach our new definition to Message stanzas\n        export interface Message {\n            result?: InboxResult;\n        }\n    }\n}\n\n\n// 7. Create a plugin function\nexport default function (client: Agent, stanzas: JXT.Registry) {\n\n    // 8. Create and register our custom stanza definition\n    stanzas.define({\n        element: 'result',\n        fields: {\n            unread: JXT.attribute('unread'),\n            queryid: JXT.attribute('queryid'),\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'message.result'\n    });\n\n    stanzas.define({\n        element: 'forwarded',\n        fields: {\n            unread: JXT.attribute('unread')\n        },\n        namespace: 'urn:xmpp:forward:0',\n        path: 'message.result.forwarded'\n    });\n\n    stanzas.define({\n        element: 'inbox',\n        fields: {\n            result: JXT.text()\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'iq.inbox'\n    });\n\n    // 9. Add API to the StanzaJS agent for sending\n    client.getInbox = () => {\n        return client.sendIQ({\n            type: 'set',\n            inbox: \"test\",\n        });\n    };\n\n    // 10. Listen for incoming inbox data and emit our own event\n    client.on('message', msg => {\n        if (msg.result) {\n            client.emit('inbox', msg);\n        }\n    });\n};\n","// mycontentplugin.ts\n\nimport { Agent, JXT } from 'stanza';\n\nexport const NS_VISIONABLE_STATUS = 'http://visionable.com/p/status';\n\nexport interface VisionableStatusContent {\n    // The itemType field is what is used to distinguish pubsub\n    // item content types. It MUST be present when exporting,\n    // but we're going to mark it as optional to be easier to\n    // work with.\n    itemType?: typeof NS_VISIONABLE_STATUS;\n    status: string;\n    timestamp?: BigInt;\n}\n\nexport default function(client: Agent, stanzas: JXT.Registry) {\n      stanzas.define({\n        // Inject our definition into all pubsub item content slots.\n        // These slots are already registered with `itemType` as the\n        // type field.\n        aliases: JXT.pubsubItemContentAliases(),\n        element: 'status',\n        fields: {\n            status: JXT.childText(null, 'status'),\n            timestamp: JXT.childInteger(null, 'timestamp'),\n        },\n        namespace: NS_VISIONABLE_STATUS,\n        // Specify the `itemType` value for our content.\n        type: NS_VISIONABLE_STATUS\n    });\n    client.disco.addFeature(NS_VISIONABLE_STATUS);\n    client.disco.addFeature(NS_PEP_NOTIFY(NS_VISIONABLE_STATUS));\n}\n\nconst NS_PEP_NOTIFY = (ns: string): string => `${ns}+notify`;\n\n","import { useState, useEffect, useCallback } from \"react\";\nimport * as XMPP from \"stanza\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\n\nimport db from \"./db\";\nimport \"./App.css\";\nimport SideBar from \"./sidebar\";\nimport Roster from \"./roster\";\nimport Groups from \"./groups\";\nimport Messages from \"./messages\";\nimport { Auth } from \"aws-amplify\";\n\nimport IqInbox from './inbox.ts';\nimport IqStatus from './status.ts';\n\nwindow.db = db;\n\nconst resource = localStorage.getItem(\"xmpp-resource\") || crypto.randomUUID();\nlocalStorage.setItem(\"xmpp-resource\", resource);\n\nconst initXMPP = async (jid, password, hostname) =>\n  XMPP.createClient({\n    jid,\n    password,\n    resource,\n    transports: {\n      // bosh: `https://${hostname}:443/http-bind`,\n      websocket: `wss://${hostname}:443/ws-xmpp`,\n    },\n  });\n\nconst App = ({ signOutAWS, user, hostname }) => {\n  const [client, setClient] = useState(null);\n  const [jwt, setJwt] = useState(\"\");\n  const [roster, setRoster] = useState([]);\n  const [presence, setPresence] = useState({});\n  const [activities, setActivities] = useState({});\n  const [activity, setActivity] = useState(\"\");\n  const [incomingInvites, setIncomingInvites] = useState([]);\n  const [inviteResponses, setInviteResponses] = useState({});\n  const [allUsers, setAllUsers] = useState([]);\n  const [nav, setNav] = useState(\"contacts\");\n  const [connected, setConnected] = useState(false);\n  const [server] = useState(hostname);\n  const [globalLink, setGlobalLink] = useState(null);\n\n  const [serviceName, ...[domain]] = server.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n  const xmppHostname = `${serviceName}-msg.${domain}`; // e.g. saas-msg.visionable.one\n  const mucHostname = `muclight.${xmppHostname}`; // e.g. muclight.saas-msg.visionable.one\n\n  const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n\n  const signIn = async () => {\n    if (client) {\n      return; // only sign in once\n    }\n\n    if (localStorage.getItem(\"username\") !== user.username) {\n      await db.messages.clear();\n    }\n    localStorage.setItem(\"username\", user.username);\n\n    try {\n      const { signInUserSession: session } = user;\n      const jwt = session.idToken.jwtToken;\n      setJwt(jwt);\n      const jid = `${user.username}@${xmppHostname}`;\n      const xmpp = await initXMPP(jid, jwt, xmppHostname);\n\n      xmpp.use(IqInbox);\n      xmpp.use(IqStatus);\n\n      setClient(xmpp);\n      setConnected(true);\n\n      const cognitoUsers = await getAllUsers(jwt, apiBase);\n      const extendedUsers = cognitoUsers.map((u) => ({ ...u, name: userFullName(u) }));\n      setAllUsers(extendedUsers);\n\n      const accountInfo = await getAccountInfo(jwt, apiBase);\n      setGlobalLink(getGlobalLink(accountInfo));\n\n      window.client = xmpp;\n\n      xmpp.on(\"session:started\", async () => {\n        console.log(\"session:started\");\n        xmpp.updateCaps();\n        xmpp.sendPresence({\n          legacyCapabilities: xmpp.disco.getCaps() // have to enable this to get PEP notifications\n        });\n        xmpp.enableKeepAlive({\n          interval: 10,\n        });\n        xmpp.enableCarbons();\n\n        const roster = (await xmpp.getRoster()).items;\n        setRoster(roster);\n\n        // get \"inbox\"\n        // const res = await xmpp.getInbox();\n        // console.log(\"INBOX RES\", res);\n\n        // Get all of the messages up until the last one I've seen\n        // const lastMessage = await db.messages.orderBy(\"timestamp\").last();\n        // getAllMessages({ client: xmpp, start: lastMessage?.timestamp });\n\n        // Get the last few messages for each of our roster items\n        /*\n        roster.forEach((r) => {\n          if (r.groups.length) {\n            xmpp.searchHistory({ to: r.jid, paging: { before: \"\" }}); // 'to' for MUCs\n          } else {\n            xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }});\n          }\n        });\n        */\n      });\n\n      xmpp.on(\"message\", (message) => {\n        if (message.type === 'meeting-invite') {\n          setIncomingInvites((prev) => [...prev, message]);\n        } else if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"message:sent\", (message) => {\n        if (message.type === 'meeting-invite') {\n          // TODO: display something in the chat\n        } else if (message.type === \"chat\") {\n          // TODO: until acked, put a pending status\n          db.messages.put({\n            id: message.id,\n            from: xmpp.config.jid,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"mam:item\", (mam) => {\n        const message = mam.archive?.item?.message;\n        const timestamp = mam.archive?.item?.delay?.timestamp;\n        if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"inbox\", (msg) => {\n        const timestamp = msg.result?.forwarded?.delay?.stamp;\n        const message = msg.result?.forwarded?.message;\n        console.log(\"inbox message\", message)\n\n        if (!message) { return; }\n        const { to } = message;\n\n        if (message.type === \"chat\") {\n          const [from] = message.from.split(\"/\");\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp,\n          }, message.id)\n        } else if (message.type === \"groupchat\") {\n\n        }\n      });\n\n      xmpp.on(\"subscribe\", (data) => { // if someone subscribes to us..\n        xmpp.acceptSubscription(data.from); // auto accept\n        // xmpp.subscribe(data.from);\n      });\n\n      xmpp.on(\"unsubscribe\", () => { // if someone removes me from their roster\n        // xmpp.unsubscribe(data.from); // remove them from ours?\n      });\n\n      xmpp.on(\"roster:update\", async (data) => { // roster item change\n        /*\n        data.roster.items.forEach((r) => {\n          xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }}); // get the last few messages\n        });\n        */\n\n        setRoster((await xmpp.getRoster()).items)\n      });\n\n      // if someone adds you to a room, auto accept it\n      xmpp.on(\"muc:invite\", (data) => {\n        setTimeout(() => {\n          xmpp.joinRoom(data.room);\n        }, 1000);\n      });\n\n      // created or added to a room\n      xmpp.on(\"muc:available\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      // no longer in a room\n      xmpp.on(\"muc:unavailable\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      xmpp.on(\"presence\", (data) => {\n        setPresence((prev) => ({ ...prev, [data.from]: data }))\n      });\n\n      xmpp.on(\"activity\", (data) => {\n        const { jid, activity: { text } } = data;\n        console.log(\"ACTIVITY\", jid, text);\n        if (jid === xmpp.config.jid) {\n          setActivity(text);\n        } else {\n          setActivities((prev) => ({ ...prev, [jid]: text }));\n        }\n      });\n\n      xmpp.on(\"*\", async (type, data) => {\n        console.log(type, data);\n      });\n\n      // on disconnect, retry\n      xmpp.on(\"disconnected\", () => {\n        console.log(\"DISCONNECTED\");\n        setConnected(false);\n        // setTimeout(xmpp.connect, 3000)\n      })\n\n      xmpp.on(\"connected\", () => {\n        setConnected(true);\n      })\n\n      xmpp.connect();\n\n      window.addEventListener('beforeunload', function(event) {\n        console.log('window.beforeunload');\n        xmpp.disconnect();\n      });\n    } catch (e) {\n      console.error(\"caught\", e);\n    }\n  };\n\n  useEffect(signIn, [user]);\n\n  // extend the roster with info from the User API, presence, etc.\n  const extendedRoster = roster.map(r => {\n    const user = allUsers.find(u => r.jid.includes(u.user_id));\n    const name = r.name // if the roster item has a name\n      ? r.name // use that\n      : user // otherwise, if there's a corresponding user from the User API\n        ? userFullName(user) // get the name of that\n        : r.jid;// otherwise, just show their JID\n\n    // grab all of the resources that we've been given presence for this user\n    const statuses = Object.values(presence)\n      .filter((u) => u.from.includes(r.jid))\n      .filter((u) => u.type !== 'unavailable')\n      .map((u) => u.status || 'available');\n\n    const status = statuses.length === 0 // if they have no resources online\n      ? 'unavailable' // they're unavailable\n      : statuses.some((s) => s === 'in-meeting') // if _any_ resource is in a meeting\n        ? 'in-meeting' // show in-meeting\n        : statuses.every((s) => s === 'away') // if _all_ of their resources are away\n          ? 'away' // show away\n          : statuses.every((s) => s === 'available') // if _all_ of their resources are available\n            ? 'available' // show available\n            : 'available'; // otherwise, if they have other online resources, show available\n\n    return {\n      ...r,\n      user,\n      name,\n      status,\n      statuses,\n      activity: activities[r.jid],\n      isRoom: !!r.groups?.[0]?.includes(\"muc\"),\n    };\n  });\n  window.presence = presence;\n  window.roster = extendedRoster;\n  window.activities = activities;\n\n  console.log('new presence list', presence);\n  console.log(\"extended roster\", extendedRoster);\n\n  const privateGroups = extendedRoster\n    .filter(i => !i.isRoom)\n    .map(i => i.groups)\n    .flat()\n    .filter((value, index, self) => self.indexOf(value) === index)\n    .map(g => ({ name: g, users: extendedRoster.filter(i => i.groups.includes(g)) }));\n\n  // find my own user from the User API\n  const me = allUsers.find((u) => client.jid.match(u.user_id)) || {};\n\n  const reconnect = useCallback(async () => {\n    // client.config.credentials.password = user.signInUserSession.idToken.jwtToken;\n    const password = Auth.currentSession.idToken.jwtToken;\n    client.updateConfig({ ...(client.config.credentials), password });\n    console.log(\"reconnecting. password:\", password);\n    client.connect();\n  }, [client]);\n\n  const signOut = async () => {\n    db.messages.clear();\n    client.disconnect();\n    setConnected(false);\n    setRoster([]);\n    setPresence({});\n    localStorage.removeItem(\"visionable-xmpp-hostname\"); // grab this from context\n    signOutAWS();\n  };\n\n  const acceptInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"accept\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-accept' });\n  };\n\n  const rejectInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"reject\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-reject' });\n  };\n\n  if (!client) {\n    return (\n      <div className=\"App\">Loading</div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <SideBar\n        nav={nav}\n        setNav={setNav}\n        signOut={signOut}\n        client={client}\n        me={me}\n        hostname={hostname}\n        activity={activity}\n        globalLink={globalLink}\n        jwt={jwt}\n        />\n\n      <Snackbar\n        onClick={reconnect}\n        open={!connected}\n        anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n        sx={{ cursor: \"pointer\" }}\n      >\n        <Alert severity=\"error\" sx={{ width: '100%' }}>Disconnected. Click here to reconnect</Alert>\n      </Snackbar>\n\n      <IncomingInvites\n        accept={acceptInvite}\n        reject={rejectInvite}\n        invites={incomingInvites}\n        responses={inviteResponses} />\n\n      <Box className=\"main\">\n        {nav === 'contacts'\n          ? <Roster\n            roster={extendedRoster}\n            // presence={presence}\n            allUsers={allUsers}\n            client={client}\n            API_BASE={apiBase}\n            MUC_LIGHT_HOSTNAME={mucHostname}\n            jwt={jwt}\n            />\n          : nav === 'messages'\n            ? <Messages\n              roster={extendedRoster}\n              // presence={presence}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n            : nav === 'groups'\n              ? <Groups\n              privateGroups={privateGroups}\n              roster={extendedRoster}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n              : null}\n      </Box>\n    </div>\n  );\n};\n\nconst IncomingInvites = ({ accept, reject, invites, responses }) =>\n  invites.filter((m) => !responses[m.id]).map((m) => (\n    <Dialog key={m.id} open={true}>\n      <DialogTitle>Meeting Invite</DialogTitle>\n      <DialogContent>\n        <p>Invite ID: {m.id}</p>\n        <p>From: {m.from}</p>\n        <p>Meeting ID: {m.body}</p>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" onClick={() => reject(m)}>Reject</Button>\n        <Button onClick={() => accept(m)}>Accept</Button>\n      </DialogActions>\n    </Dialog>\n  ));\n\nconst getAllUsers = async (jwt, apiBase, page = 1) => {\n  const res = await fetch(`${apiBase}/api/users?page=${page}`, { headers: { Authorization: jwt } });\n  if (!res.ok) {\n    return [];\n  }\n  const json = await res.json();\n  if (json.current_page === json.last_page) {\n    return json.data;\n  }\n  return [...json.data, ...(await getAllUsers(jwt, apiBase, page + 1))];\n}\n\nfunction userFullName(user) {\n  return user?.name\n  ? user.name\n    : user?.display_name\n      ? user.display_name\n      : user?.first_name\n        ? `${user.first_name} ${user.last_name}`\n        : \"[No Name]\";\n}\n\nasync function getAllMessages({ client, start, after }) {\n  const paging = after ? { after } : {};\n  const { complete, paging: { last } } = await client.searchHistory({ start, paging });\n\n  if (!complete) {\n    getAllMessages({ client, after: last });\n  }\n}\n\nasync function getAccountInfo(jwt, apiBase) {\n  const res = await fetch(`${apiBase}/api/account/info`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : {};\n}\n\nfunction getGlobalLink(accountInfo) {\n  try {\n    return JSON.parse(accountInfo?.account_data || \"null\")?.globalLink;\n  } catch(e) {\n    return null;\n  }\n}\n\nexport default App;\n","import React, { useState, useEffect, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport Amplify from \"aws-amplify\";\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nconst Context = createContext({});\n\nconst HOSTNAME_KEY = \"visionable-xmpp-hostname\";\nconst lastHostname = localStorage.getItem(HOSTNAME_KEY);\nconst hostname = lastHostname || prompt(\"Enter hostname\", \"saas.visionable.ltd\");\nlocalStorage.setItem(HOSTNAME_KEY, hostname);\n\nconst AppContainer = () => {\n  const [config, setConfig] = useState(null);\n\n  const configure = async () => {\n    const json = await getServiceConfig(hostname)\n\n    Amplify.configure({\n      Auth: {\n        region: json.AWSRegion,\n        userPoolId: json.AWSUserPoolID,\n        userPoolWebClientId: json.AWSUserPoolClientID,\n      },\n    });\n\n    setConfig(json);\n  };\n\n  useEffect(() => configure(), []);\n\n  const value = {\n    HOSTNAME_KEY\n  };\n\n  return !config\n    ? null\n    : (\n      <Context.Provider value={value}>\n        <Authenticator\n          components={{\n            Header() {\n              return (\n                <div style={{ textAlign: \"center\", marginBottom: \"2em\" }}>\n                  <img\n                    alt=\"Visionable logo\"\n                    style={{ maxWidth: \"300px\" }}\n                    src=\"https://v3.visionable.io/images/visionable-logo.svg\" />\n                </div>\n              );\n            }\n          }}\n          signUpAttributes={[\n            'family_name',\n            'given_name',\n            'updated_at',\n          ]}\n          loginMechanisms={['email']}\n        >\n          {({ signOut, user }) => (\n            <App signOutAWS={signOut} user={user} hostname={hostname} />\n          )}\n        </Authenticator>\n      </Context.Provider>\n    );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nasync function getServiceConfig(hostname) {\n  try {\n    const [serviceName, ...[domain]] = hostname.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n    const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n    const res = await fetch(`${apiBase}/api/config`, { mode: \"cors\" });\n    return await res.json();\n  } catch (e) {\n    console.log(e);\n    alert(\"Error requesting configuration data for this service\");\n    localStorage.removeItem(HOSTNAME_KEY);\n    window.location.reload();\n  }\n}\n\n/*\nif ('serviceWorker' in navigator) {\n  console.log(\"registering sw\");\n  navigator.serviceWorker.register('./firebase-messaging-sw.js')\n    .then(function(registration) {\n      console.log('Registration was successful: ', registration)\n    })\n    .catch(function(e) {\n      console.error('Registration has filed', e)\n    })\n}\n*/\n"],"sourceRoot":""}