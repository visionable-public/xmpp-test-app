{"version":3,"sources":["db.js","settings.js","edit-profile.js","profile.js","sidebar.js","message.js","contact.js","roster.js","groups.js","messages.js","inbox.ts","App.js","index.js"],"names":["db","Dexie","version","stores","messages","Settings","client","me","onClose","open","useState","mfa","setMfa","qr","setQr","loading","setLoading","token","setToken","useEffect","a","Auth","currentAuthenticatedUser","user","getPreferredMFA","mfaType","setupTOTP","email","attributes","code","str","onMfaChange","setPreferredMFA","checkToken","verifyTotpToken","then","alert","catch","e","console","log","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","onChange","checked","label","value","size","TextField","sx","my","target","InputProps","endAdornment","Button","disabled","onClick","DialogActions","EditProfile","fullName","setFullName","title","setTitle","phone","setPhone","organization","setOrganization","getVCard","config","jid","res","records","forEach","r","type","Stack","m","display","gap","defaultValue","vCard","publishVCard","initials","u","name","split","slice","map","n","substr","Profile","signOut","activity","setStatus","anchorEl","setAnchorEl","showSettings","setShowSettings","showProfile","setShowProfile","Boolean","handleClose","statusList","key","color","icon","Circle","ListItem","disablePadding","event","currentTarget","mx","Avatar","ListItemText","primary","primaryTypographyProps","textOverflow","overflow","whiteSpace","secondary","secondaryTypographyProps","Menu","id","MenuItem","ListItemIcon","fontSize","Divider","s","status","sendPresence","text","prompt","publishActivity","items","route","iconComponent","ContactsIcon","GroupsIcon","ChatIcon","SideBar","setNav","nav","hostname","globalLink","List","flexDirection","width","minWidth","background","i","IconComponent","ListItemButton","window","Link","mt","justifyContent","Chat","message","mine","isRoom","from","includes","Box","className","blue","p","borderRadius","marginLeft","marginRight","wordBreak","style","timestamp","toLocaleString","componentDecorator","decoratedHref","decoratedText","href","isImage","body","rel","src","alt","maxHeight","isFile","textDecoration","Card","direction","mr","nameFromUrl","createMeeting","API_BASE","jwt","url","mstart","parseInt","Date","getTime","formData","FormData","append","toString","fetch","method","headers","Authorization","json","AddUserToRoomPrompt","close","allUsers","room","setUser","Autocomplete","_","options","user_id","renderInput","params","server","setRoomAffiliation","upload","files","Promise","all","Array","f","mediaType","getUploadService","service","getUploadSlot","slot","downloadUrl","download","uploadUrl","Message","members","setMembers","setMessage","uploading","setUploading","showAddUserToRoom","setShowAddUserToRoom","scrollRef","useRef","fileRef","roomListAnchorEl","setRoomListAnchorEl","showRoomList","attachFile","urls","sendMessage","to","useDropzone","onDrop","noClick","noKeyboard","getRootProps","isDragActive","getInputProps","useLiveQuery","where","equals","sortBy","or","and","group","extendedMessages","find","removeContact","leaveRoom","removeRosterItem","unsubscribe","invite","uuid","memberList","getRoomMembers","muc","users","closeRoomList","current","scrollTop","scrollHeight","allOtherUsers","filter","flexGrow","Backdrop","px","alignItems","IconButton","ml","MenuListProps","ref","placeholder","onKeyPress","CircularProgress","flexShrink","click","string","URL","protocol","isUrl","match","test","parts","length","Contact","available","away","unavailable","Popover","anchorOrigin","vertical","horizontal","Badge","componentsProps","badge","backgroundColor","border","height","overlap","badgeContent","invisible","variant","pl","Typography","fontWeight","readOnly","AddRoomPrompt","add","roomName","setRoomName","AddContactPrompt","newContact","setNewContact","userDisplayName","first_name","last_name","Roster","roster","MUC_LIGHT_HOSTNAME","search","setSearch","subNav","setSubNav","showAddContact","setShowAddContact","showAddRoom","setShowAddRoom","tab","setTab","menuAnchorEl","setMenuAnchorEl","showAddMenu","profileAnchorEl","setProfileAnchorEl","focusedUser","setFocusedUser","closeAddMenu","addRoom","crypto","randomUUID","joinRoom","configureRoom","fields","filteredRoster","toLowerCase","subscribe","Paper","borderBottom","borderColor","Tabs","idx","Tab","index","ListItemAvatar","stopPropagation","AddGroupPrompt","setUsers","setType","FormControl","RadioGroup","row","Radio","Select","multiple","input","OutlinedInput","renderValue","selected","flexWrap","Chip","onMouseDown","onDelete","removeUser","groups","concat","updateRosterItem","Group","cursor","g","Groups","privateGroups","showAddGroup","setShowAddGroup","filteredGroups","AddChatPrompt","Messages","showAddChat","setShowAddChat","tos","orderBy","uniqueKeys","froms","jids","v","indexOf","filteredUsers","stanzas","define","element","unread","JXT","attribute","queryid","namespace","path","result","getInbox","sendIQ","inbox","on","msg","emit","resource","localStorage","getItem","setItem","initXMPP","password","XMPP","transports","websocket","IncomingInvites","accept","reject","invites","responses","getAllUsers","apiBase","ok","userFullName","display_name","getAccountInfo","getGlobalLink","accountInfo","JSON","parse","account_data","App","signOutAWS","setClient","setJwt","setRoster","presence","setPresence","activities","setActivities","setActivity","incomingInvites","setIncomingInvites","inviteResponses","setInviteResponses","setAllUsers","connected","setConnected","setGlobalLink","serviceName","domain","xmppHostname","mucHostname","signIn","username","clear","session","signInUserSession","idToken","jwtToken","xmpp","use","IqInbox","cognitoUsers","extendedUsers","updateCaps","legacyCapabilities","disco","getCaps","enableKeepAlive","enableCarbons","getRoster","prev","before","after","put","mam","archive","item","delay","forwarded","stamp","data","acceptSubscription","setTimeout","connect","addEventListener","disconnect","error","extendedRoster","statuses","Object","values","some","every","flat","self","reconnect","useCallback","currentSession","updateConfig","credentials","removeItem","Snackbar","Alert","severity","Context","createContext","HOSTNAME_KEY","AppContainer","setConfig","configure","getServiceConfig","Amplify","region","AWSRegion","userPoolId","AWSUserPoolID","userPoolWebClientId","AWSUserPoolClientID","Provider","Authenticator","components","Header","textAlign","marginBottom","signUpAttributes","loginMechanisms","mode","location","reload","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.bfebc1dd.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nconst db = new Dexie('visionable-xmpp-test-app');\n\ndb.version(1).stores({\n  messages: '++id, group, from, to, body, type, timestamp',\n});\n\nexport default db;\n","import { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  FormControlLabel,\n  Button,\n  Checkbox,\n  TextField,\n} from '@mui/material';\n\nimport { QRCodeSVG } from 'qrcode.react'\n\nimport { Auth } from \"aws-amplify\";\n\nconst Settings = ({ client, me, onClose, open }) => {\n  const [mfa, setMfa] = useState(false);\n  const [qr, setQr] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(\"\");\n\n  useEffect(async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const mfaType = await Auth.getPreferredMFA(user);\n    setMfa(mfaType === 'SOFTWARE_TOKEN_MFA')\n    setLoading(false);\n  }, []);\n\n  const setupTOTP = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const { attributes: { email } } = user;\n\n    const code = await Auth.setupTOTP(user);\n    const issuer = \"Visionable\"; // TODO: ?\n    const str = `otpauth://totp/Visionable:${email}?secret=${code}&issuer=${issuer}`;\n    setQr(str);\n  }\n\n  const onMfaChange = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    setMfa(!mfa);\n\n    if (!mfa) {\n      setupTOTP();\n    } else {\n      Auth.setPreferredMFA(user, 'NOMFA');\n    }\n  }\n\n  const onTokenChange = (e) => {\n    setToken(e.target.value);\n  };\n\n  const checkToken = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n\n    Auth.verifyTotpToken(user, token)\n      .then(() => {\n        Auth.setPreferredMFA(user, 'TOTP');\n        alert(\"Successfully enabled MFA\")\n        setQr(null);\n      })\n      .catch((e) => {\n        console.log(\"ERROR\", e);\n        alert(\"Error enabling MFA\");\n      });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Settings</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading</div>\n          : <>\n            <FormControlLabel control={<Checkbox onChange={onMfaChange} checked={mfa} />} label=\"Enable MFA\" />\n\n            {mfa && qr && <>\n              <br />\n              <QRCodeSVG value={qr} size={200} />\n              <br />\n              <TextField\n                sx={{ my: 1 }}\n                onChange={onTokenChange}\n                label=\"Verification Code\"\n                InputProps={{endAdornment: <Button disabled={!token} onClick={checkToken}>Verify</Button>}}\n                />\n              </>}\n          </>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Settings\n","\nimport { useState, useEffect } from 'react';\nimport {\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@mui/material';\n\nconst EditProfile = ({ client, me, onClose, open }) => {\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const save = () => {\n    const vCard = {\n      fullName,\n      title: title,\n      records: [\n        { type: \"tel\", value: phone },\n        { type: \"title\", value: title },\n        { type: \"organization\", value: organization },\n      ],\n    };\n    client.publishVCard(vCard);\n    onClose();\n  };\n\n  useEffect(async () => {\n    if (open) {\n      try {\n        const res = await client.getVCard(client.config.jid);\n        console.log(\"GOT VCARD\", res);\n\n        setFullName(res.fullName || \"\");\n\n        res.records?.forEach(r => {\n          if (r.type === \"tel\") {\n            setPhone(r.value);\n          } else if (r.type === \"title\") {\n            setTitle(r.value);\n          } else if (r.type === \"organization\") {\n            setOrganization(r.value);\n          }\n        });\n\n        setLoading(false);\n      } catch(e) {\n        setLoading(false);\n      }\n    }\n  }, [open]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Profile</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ m: 1, display: 'flex', gap: \"1em\" }}>\n              <TextField onChange={e => setFullName(e.target.value)} label=\"Full Name (TODO)\" defaultValue={fullName} />\n              <TextField onChange={e => setPhone(e.target.value)} label=\"Phone\" defaultValue={phone} />\n              <TextField onChange={e => setOrganization(e.target.value)} label=\"Organization\" defaultValue={organization} />\n              <TextField onChange={e => setTitle(e.target.value)} label=\"Title\" defaultValue={title} />\n            </Stack>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={save}>Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProfile\n","import { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemAvatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemButton from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport Circle from '@mui/icons-material/Circle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport SettingsDialog from './settings';\nimport EditProfileDialog from './edit-profile';\n\nconst Profile = ({ client, me, signOut, activity }) => {\n  const [, setStatus] = useState(\"available\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeStatus = (status) => {\n    setStatus(status);\n    client.sendPresence({ status });\n  };\n\n  const activityPrompt = () => {\n    const text = prompt(\"Enter a custom message\", activity);\n    client.publishActivity({ text })\n  }\n\n  const editProfile = () => {\n    setShowProfile(true);\n  };\n\n  const statusList = [\n    {\n      key: \"available\",\n      color: \"#53b397\",\n      label: \"Available\",\n      icon: Circle,\n    },\n    {\n      key: \"in-meeting\",\n      color: \"#ea3323\",\n      label: \"In a meeting\",\n      icon: Circle,\n    },\n    {\n      key: \"away\",\n      color: \"#f0a73e\",\n      label: \"Away\",\n      icon: Circle,\n    },\n  ]\n\n  return (\n    <>\n      <ListItem disablePadding>\n        <ListItemButton onClick={handleClick} sx={{ mx: 1 }}>\n          <ListItemAvatar>\n            <Avatar>{initials(me)}</Avatar>\n          </ListItemAvatar>\n        </ListItemButton>\n\n        <ListItemText\n          primary={me.name}\n          primaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          secondary={me.email}\n          secondaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          title={client.config.jid}\n        />\n      </ListItem>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n      >\n        <MenuItem onClick={editProfile}>\n          <ListItemIcon>\n            <AccountBoxIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {me.name}\n        </MenuItem>\n\n        <Divider />\n\n        {statusList.map((s) => (\n          <MenuItem key={s.key} onClick={() => changeStatus(s.key)}>\n            <ListItemIcon>\n              <Circle fontSize=\"small\" sx={{ color: s.color }} />\n            </ListItemIcon>\n\n            <ListItemText primary={s.label} />\n          </MenuItem>\n        ))}\n\n        <MenuItem onClick={activityPrompt}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {activity || <i>Custom message</i>}\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem onClick={() => {setShowSettings(true)}}>\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          Settings\n        </MenuItem>\n\n        <MenuItem onClick={signOut}>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n\n      <SettingsDialog open={showSettings} onClose={() => setShowSettings(false)} client={client} me={me} />\n      <EditProfileDialog open={showProfile} onClose={() => setShowProfile(false)} client={client} me={me} />\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Profile;\n","import {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport {\n  Contacts as ContactsIcon,\n  Groups as GroupsIcon,\n  Chat as ChatIcon,\n  Link as LinkIcon,\n} from \"@mui/icons-material\";\n\nimport Profile from './profile';\n\nconst items = [\n  {\n    route: \"contacts\",\n    label: \"Contacts\",\n    iconComponent: ContactsIcon,\n  },\n  {\n    route: \"groups\",\n    label: \"Groups\",\n    iconComponent: GroupsIcon,\n  },\n  {\n    route: \"messages\",\n    label: \"Messages\",\n    iconComponent: ChatIcon,\n  },\n]\n\nconst SideBar = ({ client, me, setNav, nav, signOut, hostname, activity, globalLink}) => (\n  <List sx={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"240px\",\n    minWidth: \"240px\",\n    background: \"#091c38\",\n    color: \"white\"\n  }}>\n    <Profile client={client} me={me} signOut={signOut} activity={activity} />\n\n    {items.map(i => {\n      const IconComponent = i.iconComponent;\n\n      return (\n        <ListItem key={i.route} disablePadding sx={{ background: nav === i.route ? 'rgba(255,255,255,0.1)' : 'transparent' }}>\n          <ListItemButton onClick={() => setNav(i.route)}>\n            <ListItemIcon>\n              <IconComponent sx={{ color: \"white\" }} />\n            </ListItemIcon>\n\n            <ListItemText>\n              {i.label}\n            </ListItemText>\n          </ListItemButton>\n        </ListItem>\n      )})}\n\n    {globalLink && (\n      <ListItem disablePadding>\n        <ListItemButton onClick={() => window.open(globalLink)}>\n          <ListItemIcon>\n            <LinkIcon sx={{ color: \"white\" }} />\n          </ListItemIcon>\n\n          <ListItemText>Global Link</ListItemText>\n        </ListItemButton>\n      </ListItem>\n    )}\n\n    <ListItem sx={{ mt: \"auto\", justifyContent: \"center\", color: \"#bbb\" }}>\n      {hostname}\n    </ListItem>\n  </List>\n);\n\nexport default SideBar;\n","import {\n  Box,\n  Button,\n  Card,\n  Stack,\n  TextField,\n  IconButton,\n  Autocomplete,\n  Menu,\n  MenuItem,\n  Divider,\n  Backdrop,\n} from \"@mui/material\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDropzone } from 'react-dropzone'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { blue } from \"@mui/material/colors\";\n\nimport Linkify from 'react-linkify';\n// import { ReactTinyLink } from 'react-tiny-link'\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport db from './db';\n\nconst Message = ({ client, user, API_BASE, jwt, allUsers }) => {\n  const [members, setMembers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [showAddUserToRoom, setShowAddUserToRoom] = useState(false);\n  const scrollRef = useRef(null);\n  const fileRef = useRef(null);\n\n  const [roomListAnchorEl, setRoomListAnchorEl] = useState(null);\n  const showRoomList = Boolean(roomListAnchorEl);\n\n  const attachFile = async (files) => {\n    setUploading(true);\n    // upload all the files and get their URLs\n    const urls = await upload(files, client);\n    console.log('urls', urls);\n\n    // send out the notifications\n    urls.forEach((url) => {\n      if (url) {\n        const type = user.isRoom ? 'groupchat' : 'chat';\n        client.sendMessage({ to: user.jid, body: url, type });\n      } else {\n        console.log(\"upload failed\");\n      }\n    });\n    setUploading(false);\n  };\n\n  const onDrop = (files) => {\n    console.log(\"dropped files\", files);\n    attachFile(files);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, noClick: true, noKeyboard: true });\n\n  const messages = useLiveQuery(() => \n    user.isRoom\n      ? db.messages.where(\"group\").equals(user.jid).sortBy(\"timestamp\")\n      : db.messages.where(\"from\").equals(user.jid).or(\"to\").equals(user.jid).and((m) => !m.group).sortBy(\"timestamp\"),\n    [user], []);\n\n  const extendedMessages = messages\n    .map((message) => { // add user info\n      const user = allUsers.find((u) => message.from?.includes(u.user_id));\n      const name = user?.name || message.from;\n\n      return { ...message, user, name };\n    });\n\n  const removeContact = async () => {\n    if (user.isRoom) {\n      await client.setRoomAffiliation(user.jid, client.config.jid, \"none\");\n      await client.leaveRoom(user.jid);\n    } else {\n      await client.removeRosterItem(user.jid);\n      await client.unsubscribe(user.jid);\n    }\n  };\n\n  const sendMessage = () => {\n    if (!message) {\n      return;\n    }\n\n    const type = user.isRoom ? 'groupchat' : 'chat';\n    client.sendMessage({ to: user.jid, body: message, type, from: client.config.jid });\n    setMessage(\"\");\n  };\n\n  const invite = async () => {\n    const body = await createMeeting(API_BASE, jwt);\n    if (body.uuid) {\n      client.sendMessage({ to: user.jid, body: body.uuid, type: 'meeting-invite' });\n    }\n  };\n\n  const memberList = async (event) => {\n    const res = await client.getRoomMembers(user.jid);\n\n    setMembers(res.muc.users.map((m) => ({\n      ...m,\n      name: allUsers.find((u) => m.jid.includes(u.user_id))?.name,\n    })));\n\n    setRoomListAnchorEl(event.target);\n  };\n\n  const closeRoomList = () => setRoomListAnchorEl(null);\n  const openAddUser = () => {\n    closeRoomList();\n    setShowAddUserToRoom(true);\n  }\n\n  useEffect(() => {\n    scrollRef.current.scrollTop = scrollRef?.current?.scrollHeight;\n  }, [messages]);\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <Stack sx={{ flexGrow: 1 }} {...getRootProps()}>\n      <AddUserToRoomPrompt\n        client={client}\n        room={user}\n        open={showAddUserToRoom}\n        close={() => setShowAddUserToRoom(false) }\n        allUsers={allOtherUsers}\n      />\n\n      <Backdrop open={isDragActive} sx={{ color: \"white\" }}><h3>Drop files to upload</h3></Backdrop>\n\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{user.name}</h2>\n\n        <IconButton sx={{ ml: \"auto\" }} onClick={removeContact} title={user.isRoom ? \"Leave Group\" : \"Remove Contact\"}>\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n\n        {user.isRoom && <>\n          <IconButton onClick={memberList}>\n            <GroupAddIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={roomListAnchorEl}\n            open={showRoomList}\n            onClose={closeRoomList}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {members.map((m) => (\n              <MenuItem key={m.jid}>{m.name}</MenuItem>\n            ))}\n            <Divider />\n            <MenuItem onClick={openAddUser}>Add</MenuItem>\n          </Menu>\n        </>}\n\n        <IconButton onClick={invite}>\n          <VideoCameraFrontIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }} ref={scrollRef}>\n        {extendedMessages.map(m => <Chat key={m.id} message={m} client={client} isRoom={user.isRoom} />)}\n      </Stack>\n\n      <Stack direction=\"row\" sx={{ p: 1 }}>\n        <TextField\n          onChange={(e) => setMessage(e.target.value)}\n          value={message}\n          sx={{ flexGrow: 1 }}\n          placeholder=\"Send a message...\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage() }\n          InputProps={{ endAdornment: <>\n            {uploading\n              ? <CircularProgress />\n              : <IconButton style={{ flexShrink: \"0\" }} onClick={() => fileRef.current.click()}>\n                <AttachFileIcon fontSize=\"inherit\" />\n                <input\n                  disabled={uploading}\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  ref={fileRef}\n                  onChange={(e) => attachFile(e.target.files)}\n                  />\n              </IconButton>}\n            <Button onClick={sendMessage}>Send</Button>\n          </>}}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n\nconst Chat = ({ message, client, isRoom }) => {\n  const mine = !message.from || message.from.includes(client.config.jid);\n\n  // if we're in a room, grab the user's jid from the `from` field\n  // if it's a direct chat, grab just the bare JID\n  // const jid = message.from?.split(\"/\")[isRoom ? 1 : 0];\n\n  return (\n    <Box\n      className={`chat-message ${mine ? \"mine\" : \"\"}`}\n      sx={{\n        background: mine ? blue[700] : \"white\",\n        color: mine ? \"white\" : \"black\",\n        p: 1.5,\n        mx: 2, my: 1,\n        borderRadius: 2,\n        marginLeft: mine ? \"auto\" : 0,\n        marginRight: mine ? 0 : \"auto\",\n        wordBreak: \"break-all\",\n      }}\n    >\n      <span style={{ fontSize: \"0.8em\" }}>\n        <b>{message.name}</b>\n          <span style={{ marginLeft: \"1em\", color: mine ? \"#eee\" : \"#666\" }}>{message.timestamp?.toLocaleString()}</span>\n      </span>\n      <br />\n      <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n        <a target=\"blank\" href={decoratedHref} key={key} style={{ color: \"inherit\" }}>\n          {decoratedText}\n        </a>\n      )}>\n        {isImage(message.body) && <div>\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\">\n            <img src={message.body} alt=\"\" style={{ maxHeight: \"50vh\", maxWidth: \"70%\" }} />\n          </a>\n        </div>}\n\n        {isFile(message.body) && !isImage(message.body) && (\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: \"none\" }}>\n            <Card sx={{ background: \"#eee\", p: 1, mt: 1 }}>\n              <Stack direction=\"row\">\n                <FileDownloadIcon sx={{ mr: 1 }} />{nameFromUrl(message.body)}\n              </Stack>\n            </Card>\n          </a>\n        )}\n\n        {!isImage(message.body) && !isFile(message.body) && message.body}\n      </Linkify>\n    </Box>\n  );\n}\n\nasync function createMeeting(API_BASE, jwt) {\n  const url = `${API_BASE}/api/meeting`;\n  const mstart = parseInt(new Date().getTime() / 1000);\n\n  const formData = new FormData();\n  formData.append(\"name\", \"Instant Meeting\");\n  formData.append(\"mstart\", mstart.toString());\n  formData.append(\"duration\", \"3600\");\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: jwt,\n    },\n    body: formData,\n  }).then(res => res.json());\n};\n\nconst AddUserToRoomPrompt = ({ open, close, allUsers, client, room }) => {\n  const [user, setUser] = useState(\"\");\n\n  const onAdd = () => {\n    const jid = `${user}@${client.config.server}`;\n    client.setRoomAffiliation(room.jid, jid, \"member\")\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add User to Room</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setUser(u.id)}\n          options={allUsers.map(u => ({\n            label: `${u.name} (${u.email})`,\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst upload = async (files, client) => {\n  return await Promise.all(Array.from(files).map(async (f) => {\n    const { name, size, type: mediaType } = f; // TODO files with spaces in name fail\n    const service = await client.getUploadService();\n    const slot = await client.getUploadSlot(service.jid, { name, size, mediaType })\n    const { download: downloadUrl, upload: { url: uploadUrl } } = slot;\n    try {\n      await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: f,\n        headers: { \"x-amz-acl\": \"public-read\" },\n      });\n      return downloadUrl;\n    } catch(e) {\n      return null;\n    }\n  }));\n};\n\nexport default Message;\n\nfunction isUrl(string) {\n  let url;\n  \n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction isFile(string) {\n  return isUrl(string) && string.match(/amazonaws.*fileshare/);\n}\n\nfunction isImage(url) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n}\n\nfunction nameFromUrl(url) {\n  const parts = url.split(\"/\");\n  return parts[parts.length - 1];\n}\n\n","import { useState, useEffect } from \"react\";\n\nimport {\n  Popover,\n  Badge,\n  Box,\n  Stack,\n  Avatar,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nconst Contact = ({ client, anchorEl, user, onClose }) => {\n  console.log(\"rendering Contact card\", user);\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const open = Boolean(anchorEl);\n\n  useEffect(async () => {\n    try {\n      const res = await client.getVCard(user.jid);\n      console.log('got user vcard', res);\n\n      setFullName(res.fullName || \"\");\n\n      res.records?.forEach(r => {\n        if (r.type === \"tel\") {\n          setPhone(r.value);\n        } else if (r.type === \"title\") {\n          setTitle(r.value);\n        } else if (r.type === \"organization\") {\n          setOrganization(r.value);\n        }\n      });\n\n      setLoading(false);\n    } catch(e) {\n      setLoading(false);\n    }\n\n  }, [anchorEl]);\n\n  const status = user.isRoom ? '' : user.status;\n  const color = {\n    available: \"#51b397\",\n    away: \"#f0a73e\",\n    unavailable: \"gray\",\n    \"in-meeting\": \"#ea3323\",\n  }[status] || \"gray\";\n\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Stack direction=\"row\">\n          <Badge\n            componentsProps={{\n              badge: {\n                sx: {\n                  backgroundColor: color,\n                  border: \"2px solid white\",\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                },\n              },\n            }}\n            overlap=\"circular\"\n            badgeContent=\" \"\n            invisible={true}\n            variant=\"dot\"\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n          >\n            <Avatar sx={{ width: 56, height: 56 }}>\n              {user.isRoom\n                ? <GroupsIcon />\n                : initials(user)}\n            </Avatar>\n          </Badge>\n          \n          <Box sx={{ pl: 2 }}>\n            <Typography sx={{ fontWeight: 'bold', p: 0, m: 0 }}>{user.name}</Typography>\n            {!user.isRoom && <div>{user.status}</div>}\n            {!user.isRoom && <div>{user.user.email}</div>}\n          </Box>\n        </Stack>\n\n        <br />\n\n        <div>{user.activity}</div>\n\n        <br />\n\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ display: 'flex', gap: \"1em\" }}>\n            {false && fullName && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Full Name (TODO)\" defaultValue={fullName} />}\n            {phone && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Phone\" defaultValue={phone} />}\n            {organization && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Organization\" defaultValue={organization} />}\n            {title && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Title\" defaultValue={title} />}\n          </Stack>}\n      </Box>\n    </Popover>\n  );\n};\n\nexport default Contact;\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\n","import { useState } from \"react\";\n\nimport {\n  Badge,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  Avatar,\n  ListItemText,\n  TextField,\n  Paper,\n  Stack,\n  Autocomplete,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tabs,\n  Tab\n} from \"@mui/material\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from './message';\nimport Contact from './contact';\n\nconst AddRoomPrompt = ({ open, close, add }) => {\n  const [roomName, setRoomName] = useState(\"\");\n\n  const onAdd = () => {\n    add(roomName);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          sx={{ width: 400, my: 1 }}\n          onChange={(e) => setRoomName(e.target.value)}\n          label=\"Group name\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst AddContactPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Contact</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map((u) => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use teh name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Roster = ({\n  roster,\n  client,\n  allUsers,\n  API_BASE,\n  MUC_LIGHT_HOSTNAME,\n  jwt,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showAddRoom, setShowAddRoom] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const showAddMenu = Boolean(menuAnchorEl);\n\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\n  const [focusedUser, setFocusedUser] = useState(null);\n\n  const openAddMenu = (event) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const closeAddMenu = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const openContact = (event, user) => {\n    event.stopPropagation();\n    setFocusedUser(user);\n    setProfileAnchorEl(event.currentTarget);\n  }\n\n  const addContact = (uuid) => {\n    const jid = `${uuid}@${client.config.server}`;\n    client.subscribe(jid);\n  }\n\n  // TODO: this will use the Room API in the future\n  const addRoom = async (name) => {\n    const uuid = crypto.randomUUID();\n    const jid = `${uuid}@${MUC_LIGHT_HOSTNAME}`;\n    await client.joinRoom(jid);\n    client.configureRoom(jid, { fields: [ { name: 'roomname', value: name } ] });\n  }\n\n  // filter by search\n  const filteredRoster = roster.filter(r =>\n    r.name?.toLowerCase().includes(search.toLowerCase()) || r.jid?.includes(search))\n  .filter(r => (tab === 0 && !r.isRoom) || (tab === 1 && r.isRoom));\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <>\n      <AddContactPrompt\n        add={addContact}\n        close={() => setShowAddContact(false)}\n        open={showAddContact}\n        allUsers={allOtherUsers}\n      />\n\n      <AddRoomPrompt\n        add={addRoom}\n        close={() => setShowAddRoom(false)}\n        open={showAddRoom}\n      />\n\n      {profileAnchorEl && focusedUser &&\n        <Contact client={client} user={focusedUser} anchorEl={profileAnchorEl} onClose={() => setProfileAnchorEl(null)}/>}\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Contacts</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={openAddMenu}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={menuAnchorEl}\n              open={showAddMenu}\n              onClose={closeAddMenu}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button',\n              }}\n            >\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddContact(true)}}>Add Contact</MenuItem>\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddRoom(true)}}>Add Group</MenuItem>\n            </Menu>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Contacts\" index={0} />\n            <Tab label=\"MUCs\" index={1} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredRoster.map((u) => {\n            const status = u.isRoom ? '' : u.status;\n            const color = {\n              available: \"#51b397\",\n              away: \"#f0a73e\",\n              unavailable: \"gray\",\n              \"in-meeting\": \"#ea3323\",\n            }[status] || \"gray\";\n\n            return (\n              <ListItem key={u.jid} disablePadding>\n                <ListItemButton onClick={() => setSubNav(u)}>\n                  <ListItemAvatar>\n                    <Badge\n                      componentsProps={{\n                        badge: {\n                          sx: {\n                            backgroundColor: color,\n                            border: \"2px solid white\",\n                            width: 14,\n                            height: 14,\n                            borderRadius: 7,\n                          },\n                        },\n                      }}\n                      overlap=\"circular\"\n                      badgeContent=\" \"\n                      invisible={u.isRoom}\n                      variant=\"dot\"\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                    >\n                      <Avatar onClick={(e) => openContact(e, u)}>\n                        {u.isRoom\n                          ? <GroupsIcon />\n                          : initials(u)}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n\n                  <ListItemText\n                    primary={<>{u.name} {!u.isRoom ? <span style={{ color: \"#888\" }}>- {u.user?.email}</span> : ''}</>}\n                    primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                    secondary={u.activity ? u.activity : \"\"}\n                    secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                    />\n                </ListItemButton>\n              </ListItem>\n            )})}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Roster;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  OutlinedInput,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Chip,\n  Tabs,\n  Tab,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst AddGroupPrompt = ({ open, close, allUsers, roster, client }) => {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [type, setType] = useState(\"private\");\n\n  const onAdd = () => {\n    users.forEach((u) => {\n      // add this group to this user's existing groups\n      const groups = roster.find(i => i.jid.includes(u))?.groups?.concat([title]) || [title];\n      client.updateRosterItem({ jid: u, groups });\n    });\n    setUsers([]);\n    setTitle(\"\");\n    close();\n  }\n\n  const handleUserChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setUsers(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const removeUser = (value) => {\n    setUsers(users.filter(u => u !== value));\n    // TODO\n    console.log(\"removeUser\", value);\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>New Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          type=\"text\"\n          label=\"Title\"\n          variant=\"outlined\"\n          fullWidth\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          sx={{ my: 1 }}\n          />\n\n        <FormControl sx={{ my: 1 }}>\n          <RadioGroup row value={type} onChange={(e) => setType(e.target.value)}>\n            <FormControlLabel value=\"private\" control={<Radio />} label=\"Private\" />\n            <FormControlLabel disabled value=\"public\" control={<Radio />} label=\"Public\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Select\n          sx={{ my: 1 }}\n          fullWidth\n          multiple\n          value={users}\n          onChange={handleUserChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} onMouseDown={(e) => e.stopPropagation()} onDelete={() => removeUser(value)} />\n              ))}\n            </Box>\n          )}\n        >\n          {roster.filter(i => !i.isRoom).map((user) => (\n            <MenuItem\n              key={user.jid}\n              value={user.jid}\n            >\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst Group = ({ group, roster, client }) => {\n  if (!group) { return null; }\n\n  const editTitle = () => {\n    const title = prompt(\"New Title\", group.name); // TODO make sure name isn't taken\n\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups, including this one\n        .filter(g => g !== group.name) // remove the previous group name\n        .concat([title]); // add the new name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  };\n\n  const deleteGroup = () => {\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups\n        .filter(g => g !== group.name) // remove this group name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  }\n\n  return <div>\n    <Stack sx={{ flexGrow: 1 }}>\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{group.name}</h2>\n        <EditIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={editTitle} />\n        <DeleteIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={deleteGroup} />\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }}>\n        <List>\n          {group.users.map(u => (\n            <ListItem key={u.jid}>\n              {u.name}\n            </ListItem>\n          ))}\n        </List>\n      </Stack>\n    </Stack>\n  </div>;\n}\n\nconst Groups = ({ client, allUsers, roster, jwt, API_BASE, privateGroups }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [tab, setTab] = useState(0);\n  const [showAddGroup, setShowAddGroup] = useState(false);\n\n  const filteredGroups = privateGroups?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s);\n  });\n\n  return (\n    <>\n      <AddGroupPrompt\n        close={() => setShowAddGroup(false)}\n        open={showAddGroup}\n        allUsers={allUsers}\n        roster={roster}\n        client={client}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Groups</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={() => setShowAddGroup(true)}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Private\" index={0} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredGroups.map((g) => (\n            <ListItem key={g.name} disablePadding>\n              <ListItemButton onClick={() => setSubNav(g)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {initials(g)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={g.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={g.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={g.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        <Group group={subNav} roster={roster} client={client} />\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Groups;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Autocomplete,\n} from \"@mui/material\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from \"./message\";\n\nimport db from \"./db\";\n\nconst AddChatPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Find a User</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map(u => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use the name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Messages = ({ client, allUsers, roster, jwt, API_BASE }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddChat, setShowAddChat] = useState(false);\n\n  // pull out all of the unique IDs from all of the messages\n  const tos = useLiveQuery(() => db.messages.orderBy(\"to\").uniqueKeys()) || [];\n  const froms = useLiveQuery(() => db.messages.orderBy(\"from\").uniqueKeys()) || [];\n  const groups = useLiveQuery(() => db.messages.orderBy(\"group\").uniqueKeys()) || [];\n  const jids = tos.concat(froms).concat(groups)\n  .filter((v, i, a) => a.indexOf(v) === i) // all unique jids\n  .filter((jid) => jid !== client.config.jid); // that aren't you\n\n  const users = jids?.map(jid => { // add names\n    const user = allUsers.find((u) => jid.includes(u.user_id));\n    const name = user?.name // user names come from all users\n      || roster.find((r) => r.jid === jid)?.name // room names will be in your roster\n      || jid;\n    const isRoom = groups.includes(jid);\n\n    return { jid, user, name, isRoom };\n  });\n\n  const filteredUsers = users?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s)\n      || s.includes(u.name?.toLowerCase())\n      || u.user?.email?.includes(s)\n      || s.includes(u.user?.email);\n  });\n\n  const addChat = (uuid) => {\n    console.log(\"addChat\", uuid);\n    const jid = `${uuid}@${client.config.server}`;\n    console.log(\"jid\", jid);\n    // TODO\n  };\n\n  return (\n    <>\n      <AddChatPrompt\n        add={addChat}\n        close={() => setShowAddChat(false)}\n        open={showAddChat}\n        allUsers={allUsers}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Chat</h2>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredUsers.map((u) => (\n            <ListItem key={u.jid} disablePadding>\n              <ListItemButton onClick={() => setSubNav(u)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {u.isRoom\n                      ? <GroupsIcon />\n                      : initials(u)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={u.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={u.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={u.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Messages;\n","import { Agent, JXT } from 'stanza';\nimport { IQ, ReceivedMessage } from 'stanza/protocol';\n\n// 1. Declare our new custom stanza extension type\nexport interface InboxMessage extends ReceivedMessage {\n  result?: InboxResult;\n}\n\nexport interface InboxResult {\n  forwarded?: InboxMessage;\n}\n\nexport interface InboxMessage {\n  message?: string;\n}\n\n// 2. Begin injecting our plugin's type information into StanzaJS.\ndeclare module 'stanza' {\n\n    // 3. Declare a new method for the StanzaJS agent\n    export interface Agent {\n        getInbox(): Promise<IQ>\n    }\n\n    // 4. Declare our event types. (Event names are the fields in AgentEvents.)\n    export interface AgentEvents {\n      inbox: InboxMessage;\n    }\n\n    // 5. Stanza definitions MUST be placed in the Stanzas namespace\n    namespace Stanzas {\n\n        // 6. Attach our new definition to Message stanzas\n        export interface Message {\n            result?: InboxResult;\n        }\n    }\n}\n\n\n// 7. Create a plugin function\nexport default function (client: Agent, stanzas: JXT.Registry) {\n\n    // 8. Create and register our custom stanza definition\n    stanzas.define({\n        element: 'result',\n        fields: {\n            unread: JXT.attribute('unread'),\n            queryid: JXT.attribute('queryid'),\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'message.result'\n    });\n\n    stanzas.define({\n        element: 'forwarded',\n        fields: {\n            unread: JXT.attribute('unread')\n        },\n        namespace: 'urn:xmpp:forward:0',\n        path: 'message.result.forwarded'\n    });\n\n    stanzas.define({\n        element: 'inbox',\n        fields: {\n            result: JXT.text()\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'iq.inbox'\n    });\n\n    // 9. Add API to the StanzaJS agent for sending\n    client.getInbox = () => {\n        return client.sendIQ({\n            type: 'set',\n            inbox: \"test\",\n        });\n    };\n\n    // 10. Listen for incoming inbox data and emit our own event\n    client.on('message', msg => {\n        if (msg.result) {\n            client.emit('inbox', msg);\n        }\n    });\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport * as XMPP from \"stanza\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\n\nimport db from \"./db\";\nimport \"./App.css\";\nimport SideBar from \"./sidebar\";\nimport Roster from \"./roster\";\nimport Groups from \"./groups\";\nimport Messages from \"./messages\";\nimport { Auth } from \"aws-amplify\";\n\nimport IqInbox from './inbox.ts';\n\nwindow.db = db;\n\nconst PROTOCOL = \"wss\";\nconst PORT = \"5443\";\nconst ENDPOINT = \"ws-xmpp\";\n\nconst resource = localStorage.getItem(\"xmpp-resource\") || crypto.randomUUID();\nlocalStorage.setItem(\"xmpp-resource\", resource);\n\nconst initXMPP = async (jid, password, hostname) =>\n  XMPP.createClient({\n    jid,\n    password,\n    resource,\n    transports: {\n      websocket: `${PROTOCOL}://${hostname}:${PORT}/${ENDPOINT}`,\n    },\n  });\n\nconst App = ({ signOutAWS, user, hostname }) => {\n  const [client, setClient] = useState(null);\n  const [jwt, setJwt] = useState(\"\");\n  const [roster, setRoster] = useState([]);\n  const [presence, setPresence] = useState({});\n  const [activities, setActivities] = useState({});\n  const [activity, setActivity] = useState(\"\");\n  const [incomingInvites, setIncomingInvites] = useState([]);\n  const [inviteResponses, setInviteResponses] = useState({});\n  const [allUsers, setAllUsers] = useState([]);\n  const [nav, setNav] = useState(\"contacts\");\n  const [connected, setConnected] = useState(false);\n  const [server] = useState(hostname);\n  const [globalLink, setGlobalLink] = useState(null);\n\n  const [serviceName, ...[domain]] = server.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n  const xmppHostname = `${serviceName}-msg.${domain}`; // e.g. saas-msg.visionable.one\n  const mucHostname = `muclight.${xmppHostname}`; // e.g. muclight.saas-msg.visionable.one\n\n  const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n\n  const signIn = async () => {\n    if (client) {\n      return; // only sign in once\n    }\n\n    if (localStorage.getItem(\"username\") !== user.username) {\n      await db.messages.clear();\n    }\n    localStorage.setItem(\"username\", user.username);\n\n    try {\n      const { signInUserSession: session } = user;\n      const jwt = session.idToken.jwtToken;\n      setJwt(jwt);\n      const jid = `${user.username}@${xmppHostname}`;\n      const xmpp = await initXMPP(jid, jwt, xmppHostname);\n\n      xmpp.use(IqInbox);\n\n      setClient(xmpp);\n      setConnected(true);\n\n      const cognitoUsers = await getAllUsers(jwt, apiBase);\n      const extendedUsers = cognitoUsers.map((u) => ({ ...u, name: userFullName(u) }));\n      setAllUsers(extendedUsers);\n\n      const accountInfo = await getAccountInfo(jwt, apiBase);\n      setGlobalLink(getGlobalLink(accountInfo));\n\n      window.client = xmpp;\n\n      xmpp.on(\"session:started\", async () => {\n        console.log(\"session:started\");\n        xmpp.updateCaps();\n        xmpp.sendPresence({\n          legacyCapabilities: xmpp.disco.getCaps() // have to enable this to get PEP notifications\n        });\n        xmpp.enableKeepAlive();\n        xmpp.enableCarbons();\n\n        const roster = (await xmpp.getRoster()).items;\n        setRoster(roster);\n\n        // get \"inbox\"\n        // const res = await xmpp.getInbox();\n        // console.log(\"INBOX RES\", res);\n\n        // Get all of the messages up until the last one I've seen\n        // const lastMessage = await db.messages.orderBy(\"timestamp\").last();\n        // getAllMessages({ client: xmpp, start: lastMessage?.timestamp });\n\n        // Get the last few messages for each of our roster items\n        /*\n        roster.forEach((r) => {\n          if (r.groups.length) {\n            xmpp.searchHistory({ to: r.jid, paging: { before: \"\" }}); // 'to' for MUCs\n          } else {\n            xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }});\n          }\n        });\n        */\n      });\n\n      xmpp.on(\"message\", (message) => {\n        if (message.type === 'meeting-invite') {\n          setIncomingInvites((prev) => [...prev, message]);\n        } else if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"message:sent\", (message) => {\n        if (message.type === 'meeting-invite') {\n          // TODO: display something in the chat\n        } else if (message.type === \"chat\") {\n          // TODO: until acked, put a pending status\n          db.messages.put({\n            id: message.id,\n            from: xmpp.config.jid,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"mam:item\", (mam) => {\n        const message = mam.archive?.item?.message;\n        const timestamp = mam.archive?.item?.delay?.timestamp;\n        if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"inbox\", (msg) => {\n        const timestamp = msg.result?.forwarded?.delay?.stamp;\n        const message = msg.result?.forwarded?.message;\n        console.log(\"inbox message\", message)\n\n        if (!message) { return; }\n        const { to } = message;\n\n        if (message.type === \"chat\") {\n          const [from] = message.from.split(\"/\");\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp,\n          }, message.id)\n        } else if (message.type === \"groupchat\") {\n\n        }\n      });\n\n      xmpp.on(\"subscribe\", (data) => { // if someone subscribes to us..\n        xmpp.acceptSubscription(data.from); // auto accept\n        xmpp.subscribe(data.from);\n      });\n\n      xmpp.on(\"unsubscribe\", () => { // if someone removes me from their roster\n        // xmpp.unsubscribe(data.from); // remove them from ours?\n      });\n\n      xmpp.on(\"roster:update\", async (data) => { // roster item change\n        /*\n        data.roster.items.forEach((r) => {\n          xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }}); // get the last few messages\n        });\n        */\n\n        setRoster((await xmpp.getRoster()).items)\n      });\n\n      // if someone adds you to a room, auto accept it\n      xmpp.on(\"muc:invite\", (data) => {\n        setTimeout(() => {\n          xmpp.joinRoom(data.room);\n        }, 1000);\n      });\n\n      // created or added to a room\n      xmpp.on(\"muc:available\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      // no longer in a room\n      xmpp.on(\"muc:unavailable\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      xmpp.on(\"presence\", (data) => {\n        setPresence((prev) => ({ ...prev, [data.from]: data }))\n      });\n\n      xmpp.on(\"activity\", (data) => {\n        const { jid, activity: { text } } = data;\n        console.log(\"ACTIVITY\", jid, text);\n        if (jid === xmpp.config.jid) {\n          setActivity(text);\n        } else {\n          setActivities((prev) => ({ ...prev, [jid]: text }));\n        }\n      });\n\n      xmpp.on(\"*\", async (type, data) => {\n        console.log(type, data);\n      });\n\n      // on disconnect, retry\n      xmpp.on(\"disconnected\", () => {\n        console.log(\"DISCONNECTED\");\n        setConnected(false);\n        // setTimeout(xmpp.connect, 3000)\n      })\n\n      xmpp.on(\"connected\", () => {\n        setConnected(true);\n      })\n\n      xmpp.connect();\n\n      window.addEventListener('beforeunload', function(event) {\n        console.log('window.beforeunload');\n        xmpp.disconnect();\n      });\n    } catch (e) {\n      console.error(\"caught\", e);\n    }\n  };\n\n  useEffect(signIn, [user]);\n\n  // extend the roster with info from the User API, presence, etc.\n  const extendedRoster = roster.map(r => {\n    const user = allUsers.find(u => r.jid.includes(u.user_id));\n    const name = r.name // if the roster item has a name\n      ? r.name // use that\n      : user // otherwise, if there's a corresponding user from the User API\n        ? userFullName(user) // get the name of that\n        : r.jid;// otherwise, just show their JID\n\n    // grab all of the resources that we've been given presence for this user\n    const statuses = Object.values(presence)\n      .filter((u) => u.from.includes(r.jid))\n      .filter((u) => u.type !== 'unavailable')\n      .map((u) => u.status || 'available');\n\n    const status = statuses.length === 0 // if they have no resources online\n      ? 'unavailable' // they're unavailable\n      : statuses.some((s) => s === 'in-meeting') // if _any_ resource is in a meeting\n        ? 'in-meeting' // show in-meeting\n        : statuses.every((s) => s === 'away') // if _all_ of their resources are away\n          ? 'away' // show away\n          : statuses.every((s) => s === 'available') // if _all_ of their resources are available\n            ? 'available' // show available\n            : 'available'; // otherwise, if they have other online resources, show available\n\n    return {\n      ...r,\n      user,\n      name,\n      status,\n      statuses,\n      activity: activities[r.jid],\n      isRoom: !!r.groups?.[0]?.includes(\"muc\"),\n    };\n  });\n  window.presence = presence;\n  window.roster = extendedRoster;\n  window.activities = activities;\n\n  console.log('new presence list', presence);\n  console.log(\"extended roster\", extendedRoster);\n\n  const privateGroups = extendedRoster\n    .filter(i => !i.isRoom)\n    .map(i => i.groups)\n    .flat()\n    .filter((value, index, self) => self.indexOf(value) === index)\n    .map(g => ({ name: g, users: extendedRoster.filter(i => i.groups.includes(g)) }));\n\n  // find my own user from the User API\n  const me = allUsers.find((u) => client.jid.match(u.user_id)) || {};\n\n  const reconnect = useCallback(async () => {\n    // client.config.credentials.password = user.signInUserSession.idToken.jwtToken;\n    const password = Auth.currentSession.idToken.jwtToken;\n    client.updateConfig({ ...(client.config.credentials), password });\n    console.log(\"reconnecting. password:\", password);\n    client.connect();\n  }, [client]);\n\n  const signOut = async () => {\n    db.messages.clear();\n    client.disconnect();\n    setConnected(false);\n    setRoster([]);\n    setPresence({});\n    localStorage.removeItem(\"visionable-xmpp-hostname\"); // grab this from context\n    signOutAWS();\n  };\n\n  const acceptInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"accept\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-accept' });\n  };\n\n  const rejectInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"reject\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-reject' });\n  };\n\n  if (!client) {\n    return (\n      <div className=\"App\">Loading</div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <SideBar\n        nav={nav}\n        setNav={setNav}\n        signOut={signOut}\n        client={client}\n        me={me}\n        hostname={hostname}\n        activity={activity}\n        globalLink={globalLink}\n        />\n\n      <Snackbar\n        onClick={reconnect}\n        open={!connected}\n        anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n        sx={{ cursor: \"pointer\" }}\n      >\n        <Alert severity=\"error\" sx={{ width: '100%' }}>Disconnected. Click here to reconnect</Alert>\n      </Snackbar>\n\n      <IncomingInvites\n        accept={acceptInvite}\n        reject={rejectInvite}\n        invites={incomingInvites}\n        responses={inviteResponses} />\n\n      <Box className=\"main\">\n        {nav === 'contacts'\n          ? <Roster\n            roster={extendedRoster}\n            // presence={presence}\n            allUsers={allUsers}\n            client={client}\n            API_BASE={apiBase}\n            MUC_LIGHT_HOSTNAME={mucHostname}\n            jwt={jwt}\n            />\n          : nav === 'messages'\n            ? <Messages\n              roster={extendedRoster}\n              // presence={presence}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n            : nav === 'groups'\n              ? <Groups\n              privateGroups={privateGroups}\n              roster={extendedRoster}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n              : null}\n      </Box>\n    </div>\n  );\n};\n\nconst IncomingInvites = ({ accept, reject, invites, responses }) =>\n  invites.filter((m) => !responses[m.id]).map((m) => (\n    <Dialog key={m.id} open={true}>\n      <DialogTitle>Meeting Invite</DialogTitle>\n      <DialogContent>\n        <p>Invite ID: {m.id}</p>\n        <p>From: {m.from}</p>\n        <p>Meeting ID: {m.body}</p>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" onClick={() => reject(m)}>Reject</Button>\n        <Button onClick={() => accept(m)}>Accept</Button>\n      </DialogActions>\n    </Dialog>\n  ));\n\nconst getAllUsers = async (jwt, apiBase) => {\n  const res = await fetch(`${apiBase}/api/user`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : [];\n}\n\nfunction userFullName(user) {\n  return user?.name\n  ? user.name\n    : user?.display_name\n      ? user.display_name\n      : user?.first_name\n        ? `${user.first_name} ${user.last_name}`\n        : \"[No Name]\";\n}\n\nasync function getAllMessages({ client, start, after }) {\n  const paging = after ? { after } : {};\n  const { complete, paging: { last } } = await client.searchHistory({ start, paging });\n\n  if (!complete) {\n    getAllMessages({ client, after: last });\n  }\n}\n\nasync function getAccountInfo(jwt, apiBase) {\n  const res = await fetch(`${apiBase}/api/account/info`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : {};\n}\n\nfunction getGlobalLink(accountInfo) {\n  try {\n    return JSON.parse(accountInfo?.account_data || \"null\")?.globalLink;\n  } catch(e) {\n    return null;\n  }\n}\n\nexport default App;\n","import React, { useState, useEffect, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport Amplify from \"aws-amplify\";\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nconst Context = createContext({});\n\nconst HOSTNAME_KEY = \"visionable-xmpp-hostname\";\nconst lastHostname = localStorage.getItem(HOSTNAME_KEY);\nconst hostname = lastHostname || prompt(\"Enter hostname\", \"saas.visionable.one\");\nlocalStorage.setItem(HOSTNAME_KEY, hostname);\n\nconst AppContainer = () => {\n  const [config, setConfig] = useState(null);\n\n  const configure = async () => {\n    const json = await getServiceConfig(hostname)\n\n    Amplify.configure({\n      Auth: {\n        region: json.AWSRegion,\n        userPoolId: json.AWSUserPoolID,\n        userPoolWebClientId: json.AWSUserPoolClientID,\n      },\n    });\n\n    setConfig(json);\n  };\n\n  useEffect(() => configure(), []);\n\n  const value = {\n    HOSTNAME_KEY\n  };\n\n  return !config\n    ? null\n    : (\n      <Context.Provider value={value}>\n        <Authenticator\n          components={{\n            Header() {\n              return (\n                <div style={{ textAlign: \"center\", marginBottom: \"2em\" }}>\n                  <img\n                    alt=\"Visionable logo\"\n                    style={{ maxWidth: \"300px\" }}\n                    src=\"https://v3.visionable.io/images/visionable-logo.svg\" />\n                </div>\n              );\n            }\n          }}\n          signUpAttributes={[\n            'family_name',\n            'given_name',\n            'updated_at',\n          ]}\n          loginMechanisms={['email']}\n        >\n          {({ signOut, user }) => (\n            <App signOutAWS={signOut} user={user} hostname={hostname} />\n          )}\n        </Authenticator>\n      </Context.Provider>\n    );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nasync function getServiceConfig(hostname) {\n  try {\n    const [serviceName, ...[domain]] = hostname.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n    const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n    const res = await fetch(`${apiBase}/api/config`, { mode: \"cors\" });\n    return await res.json();\n  } catch(e) {\n    console.log(e);\n    alert(\"Error requesting configuration data for this service\");\n    localStorage.removeItem(HOSTNAME_KEY);\n    window.location.reload();\n  }\n}\n"],"sourceRoot":""}