{"version":3,"sources":["db.js","settings.js","edit-profile.js","profile.js","firebase.js","sidebar.js","message.js","contact.js","roster.js","groups.js","messages.js","inbox.ts","App.js","index.js"],"names":["db","Dexie","version","stores","messages","Settings","client","me","onClose","open","useState","mfa","setMfa","qr","setQr","loading","setLoading","token","setToken","useEffect","a","Auth","currentAuthenticatedUser","user","getPreferredMFA","mfaType","setupTOTP","email","attributes","code","str","onMfaChange","setPreferredMFA","checkToken","verifyTotpToken","then","alert","catch","e","console","log","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","FormControlLabel","control","Checkbox","onChange","checked","label","value","size","TextField","sx","my","target","InputProps","endAdornment","Button","disabled","onClick","DialogActions","EditProfile","fullName","setFullName","title","setTitle","phone","setPhone","organization","setOrganization","getVCard","config","jid","res","records","forEach","r","type","Stack","m","display","gap","defaultValue","vCard","publishVCard","initials","u","name","split","slice","map","n","substr","Profile","signOut","activity","jwt","setStatus","anchorEl","setAnchorEl","showSettings","setShowSettings","showProfile","setShowProfile","Boolean","handleClose","statusList","key","color","icon","Circle","ListItem","disablePadding","event","currentTarget","mx","Avatar","ListItemText","primary","primaryTypographyProps","textOverflow","overflow","whiteSpace","secondary","secondaryTypographyProps","Menu","id","MenuItem","ListItemIcon","fontSize","Divider","s","status","sendPresence","fetch","method","body","JSON","stringify","toUpperCase","headers","Authorization","text","prompt","publishActivity","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","getMessaging","fetchToken","setTokenFound","getToken","vapidKey","currentToken","err","items","route","iconComponent","ContactsIcon","GroupsIcon","ChatIcon","SideBar","setNav","nav","hostname","globalLink","isTokenFound","enableNotifications","Notification","requestPermission","permission","List","flexDirection","width","minWidth","background","i","IconComponent","ListItemButton","window","Link","mt","justifyContent","Chat","message","mine","isRoom","from","includes","Box","className","blue","p","borderRadius","marginLeft","marginRight","wordBreak","style","timestamp","toLocaleString","componentDecorator","decoratedHref","decoratedText","href","isImage","rel","src","alt","maxHeight","isFile","textDecoration","Card","direction","mr","nameFromUrl","createMeeting","API_BASE","url","mstart","parseInt","Date","getTime","formData","FormData","append","toString","json","AddUserToRoomPrompt","close","allUsers","room","setUser","Autocomplete","_","options","user_id","renderInput","params","server","setRoomAffiliation","upload","files","Promise","all","Array","f","mediaType","getUploadService","service","getUploadSlot","slot","downloadUrl","download","uploadUrl","Message","members","setMembers","setMessage","uploading","setUploading","showAddUserToRoom","setShowAddUserToRoom","scrollRef","useRef","fileRef","roomListAnchorEl","setRoomListAnchorEl","showRoomList","attachFile","urls","sendMessage","to","useDropzone","onDrop","noClick","noKeyboard","getRootProps","isDragActive","getInputProps","useLiveQuery","where","equals","sortBy","or","and","group","extendedMessages","find","removeContact","leaveRoom","removeRosterItem","unsubscribe","invite","uuid","memberList","getRoomMembers","muc","users","closeRoomList","current","scrollTop","scrollHeight","allOtherUsers","filter","flexGrow","Backdrop","px","alignItems","IconButton","ml","MenuListProps","ref","placeholder","onKeyPress","CircularProgress","flexShrink","click","string","URL","protocol","isUrl","match","test","parts","length","Contact","available","away","unavailable","Popover","anchorOrigin","vertical","horizontal","Badge","componentsProps","badge","backgroundColor","border","height","overlap","badgeContent","invisible","variant","pl","Typography","fontWeight","readOnly","AddRoomPrompt","add","roomName","setRoomName","AddContactPrompt","newContact","setNewContact","userDisplayName","first_name","last_name","Roster","roster","MUC_LIGHT_HOSTNAME","search","setSearch","subNav","setSubNav","showAddContact","setShowAddContact","showAddRoom","setShowAddRoom","tab","setTab","menuAnchorEl","setMenuAnchorEl","showAddMenu","profileAnchorEl","setProfileAnchorEl","focusedUser","setFocusedUser","closeAddMenu","addRoom","crypto","randomUUID","joinRoom","configureRoom","fields","filteredRoster","toLowerCase","subscribe","Paper","borderBottom","borderColor","Tabs","idx","Tab","index","ListItemAvatar","stopPropagation","AddGroupPrompt","setUsers","setType","FormControl","RadioGroup","row","Radio","Select","multiple","input","OutlinedInput","renderValue","selected","flexWrap","Chip","onMouseDown","onDelete","removeUser","groups","concat","updateRosterItem","Group","cursor","g","Groups","privateGroups","showAddGroup","setShowAddGroup","filteredGroups","AddChatPrompt","Messages","showAddChat","setShowAddChat","tos","orderBy","uniqueKeys","froms","jids","v","indexOf","filteredUsers","stanzas","define","element","unread","JXT","attribute","queryid","namespace","path","result","getInbox","sendIQ","inbox","on","msg","emit","PORT","resource","localStorage","getItem","setItem","initXMPP","password","XMPP","transports","websocket","IncomingInvites","accept","reject","invites","responses","getAllUsers","apiBase","ok","userFullName","display_name","getAccountInfo","getGlobalLink","accountInfo","parse","account_data","App","signOutAWS","setClient","setJwt","setRoster","presence","setPresence","activities","setActivities","setActivity","incomingInvites","setIncomingInvites","inviteResponses","setInviteResponses","setAllUsers","connected","setConnected","setGlobalLink","serviceName","domain","xmppHostname","mucHostname","signIn","username","clear","session","signInUserSession","idToken","jwtToken","xmpp","use","IqInbox","cognitoUsers","extendedUsers","updateCaps","legacyCapabilities","disco","getCaps","enableKeepAlive","enableCarbons","getRoster","prev","before","after","put","mam","archive","item","delay","forwarded","stamp","data","acceptSubscription","setTimeout","connect","addEventListener","disconnect","error","extendedRoster","statuses","Object","values","some","every","flat","self","reconnect","useCallback","currentSession","updateConfig","credentials","removeItem","Snackbar","Alert","severity","Context","createContext","HOSTNAME_KEY","AppContainer","setConfig","configure","getServiceConfig","Amplify","region","AWSRegion","userPoolId","AWSUserPoolID","userPoolWebClientId","AWSUserPoolClientID","Provider","Authenticator","components","Header","textAlign","marginBottom","signUpAttributes","loginMechanisms","mode","location","reload","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","register","registration"],"mappings":"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","file":"static/js/main.4932df22.chunk.js","sourcesContent":["import Dexie from 'dexie';\n\nconst db = new Dexie('visionable-xmpp-test-app');\n\ndb.version(1).stores({\n  messages: '++id, group, from, to, body, type, timestamp',\n});\n\nexport default db;\n","import { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  FormControlLabel,\n  Button,\n  Checkbox,\n  TextField,\n} from '@mui/material';\n\nimport { QRCodeSVG } from 'qrcode.react'\n\nimport { Auth } from \"aws-amplify\";\n\nconst Settings = ({ client, me, onClose, open }) => {\n  const [mfa, setMfa] = useState(false);\n  const [qr, setQr] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(\"\");\n\n  useEffect(async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const mfaType = await Auth.getPreferredMFA(user);\n    setMfa(mfaType === 'SOFTWARE_TOKEN_MFA')\n    setLoading(false);\n  }, []);\n\n  const setupTOTP = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    const { attributes: { email } } = user;\n\n    const code = await Auth.setupTOTP(user);\n    const issuer = \"Visionable\"; // TODO: ?\n    const str = `otpauth://totp/Visionable:${email}?secret=${code}&issuer=${issuer}`;\n    setQr(str);\n  }\n\n  const onMfaChange = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n    setMfa(!mfa);\n\n    if (!mfa) {\n      setupTOTP();\n    } else {\n      Auth.setPreferredMFA(user, 'NOMFA');\n    }\n  }\n\n  const onTokenChange = (e) => {\n    setToken(e.target.value);\n  };\n\n  const checkToken = async () => {\n    const user = await Auth.currentAuthenticatedUser();\n\n    Auth.verifyTotpToken(user, token)\n      .then(() => {\n        Auth.setPreferredMFA(user, 'TOTP');\n        alert(\"Successfully enabled MFA\")\n        setQr(null);\n      })\n      .catch((e) => {\n        console.log(\"ERROR\", e);\n        alert(\"Error enabling MFA\");\n      });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Settings</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading</div>\n          : <>\n            <FormControlLabel control={<Checkbox onChange={onMfaChange} checked={mfa} />} label=\"Enable MFA\" />\n\n            {mfa && qr && <>\n              <br />\n              <QRCodeSVG value={qr} size={200} />\n              <br />\n              <TextField\n                sx={{ my: 1 }}\n                onChange={onTokenChange}\n                label=\"Verification Code\"\n                InputProps={{endAdornment: <Button disabled={!token} onClick={checkToken}>Verify</Button>}}\n                />\n              </>}\n          </>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Settings\n","\nimport { useState, useEffect } from 'react';\nimport {\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from '@mui/material';\n\nconst EditProfile = ({ client, me, onClose, open }) => {\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const save = () => {\n    const vCard = {\n      fullName,\n      title: title,\n      records: [\n        { type: \"tel\", value: phone },\n        { type: \"title\", value: title },\n        { type: \"organization\", value: organization },\n      ],\n    };\n    client.publishVCard(vCard);\n    onClose();\n  };\n\n  useEffect(async () => {\n    if (open) {\n      try {\n        const res = await client.getVCard(client.config.jid);\n        console.log(\"GOT VCARD\", res);\n\n        setFullName(res.fullName || \"\");\n\n        res.records?.forEach(r => {\n          if (r.type === \"tel\") {\n            setPhone(r.value);\n          } else if (r.type === \"title\") {\n            setTitle(r.value);\n          } else if (r.type === \"organization\") {\n            setOrganization(r.value);\n          }\n        });\n\n        setLoading(false);\n      } catch(e) {\n        setLoading(false);\n      }\n    }\n  }, [open]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Profile</DialogTitle>\n\n      <DialogContent>\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ m: 1, display: 'flex', gap: \"1em\" }}>\n              <TextField onChange={e => setFullName(e.target.value)} label=\"Full Name (TODO)\" defaultValue={fullName} />\n              <TextField onChange={e => setPhone(e.target.value)} label=\"Phone\" defaultValue={phone} />\n              <TextField onChange={e => setOrganization(e.target.value)} label=\"Organization\" defaultValue={organization} />\n              <TextField onChange={e => setTitle(e.target.value)} label=\"Title\" defaultValue={title} />\n            </Stack>}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={save}>Save</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProfile\n","import { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemAvatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemButton from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\nimport Circle from '@mui/icons-material/Circle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport SettingsDialog from './settings';\nimport EditProfileDialog from './edit-profile';\n\nconst Profile = ({ client, me, signOut, activity, jwt }) => {\n  const [, setStatus] = useState(\"available\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showProfile, setShowProfile] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const changeStatus = (status) => {\n    setStatus(status);\n    client.sendPresence({ status });\n\n    // also push it to \n    fetch(`http://presence-api-lb-1290633754.us-east-1.elb.amazonaws.com/api/presence/status`, {\n      method: 'POST',\n      body: JSON.stringify({ status: status.toUpperCase() }),\n      headers: {\n        Authorization: jwt ,\n        'Content-Type': 'application/json',\n      },\n    })\n  };\n\n  const activityPrompt = () => {\n    const text = prompt(\"Enter a custom message\", activity);\n    client.publishActivity({ text })\n  }\n\n  const editProfile = () => {\n    setShowProfile(true);\n  };\n\n  const statusList = [\n    {\n      key: \"available\",\n      color: \"#53b397\",\n      label: \"Available\",\n      icon: Circle,\n    },\n    {\n      key: \"in-meeting\",\n      color: \"#ea3323\",\n      label: \"In a meeting\",\n      icon: Circle,\n    },\n    {\n      key: \"away\",\n      color: \"#f0a73e\",\n      label: \"Away\",\n      icon: Circle,\n    },\n  ]\n\n  return (\n    <>\n      <ListItem disablePadding>\n        <ListItemButton onClick={handleClick} sx={{ mx: 1 }}>\n          <ListItemAvatar>\n            <Avatar>{initials(me)}</Avatar>\n          </ListItemAvatar>\n        </ListItemButton>\n\n        <ListItemText\n          primary={me.name}\n          primaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          secondary={me.email}\n          secondaryTypographyProps={{ color: \"white\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n          title={client.config.jid}\n        />\n      </ListItem>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n      >\n        <MenuItem onClick={editProfile}>\n          <ListItemIcon>\n            <AccountBoxIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {me.name}\n        </MenuItem>\n\n        <Divider />\n\n        {statusList.map((s) => (\n          <MenuItem key={s.key} onClick={() => changeStatus(s.key)}>\n            <ListItemIcon>\n              <Circle fontSize=\"small\" sx={{ color: s.color }} />\n            </ListItemIcon>\n\n            <ListItemText primary={s.label} />\n          </MenuItem>\n        ))}\n\n        <MenuItem onClick={activityPrompt}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n\n          {activity || <i>Custom message</i>}\n        </MenuItem>\n\n        <Divider />\n\n        <MenuItem onClick={() => {setShowSettings(true)}}>\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          Settings\n        </MenuItem>\n\n        <MenuItem onClick={signOut}>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n\n      <SettingsDialog open={showSettings} onClose={() => setShowSettings(false)} client={client} me={me} />\n      <EditProfileDialog open={showProfile} onClose={() => setShowProfile(false)} client={client} me={me} />\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Profile;\n","import { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAN4UIo8mY9dz-YwvgJNCfP1zhUG5Qsi6o\",\n  authDomain: \"visionable-1f7dd.firebaseapp.com\",\n  projectId: \"visionable-1f7dd\",\n  storageBucket: \"visionable-1f7dd.appspot.com\",\n  messagingSenderId: \"1088765389745\",\n  appId: \"1:1088765389745:web:d5d6d5f9dc6d9a6e4e2b90\",\n  measurementId: \"G-09CNJKYZ9X\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst messaging = getMessaging(firebaseApp);\n\nexport const fetchToken = (setTokenFound) => {\n  return getToken(messaging, {vapidKey: \"BFE99JMfhMjIqTeYlSr4ig-XwEQC0lHobyNRZhWR1yuBk4RFbbajQxgJAAmAjZwWNMlVXWFIkRtpFo1meARvVd0\" }).then((currentToken) => {\n    if (currentToken) {\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true);\n      // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false);\n      // shows on the UI that permission is required \n    }\n  }).catch((err) => {\n    console.log('An error occurred while retrieving token. ', err);\n    // catch error while creating client token\n  });\n}\n\nexport const onMessageListener = () =>\n  new Promise((resolve) => {\n    onMessage(messaging, (payload) => {\n      resolve(payload);\n    });\n});\n","import { useEffect, useState } from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport {\n  Contacts as ContactsIcon,\n  Groups as GroupsIcon,\n  Chat as ChatIcon,\n  Link as LinkIcon,\n} from \"@mui/icons-material\";\n\nimport Profile from './profile';\nimport { fetchToken } from \"./firebase\";\n\nconst items = [\n  {\n    route: \"contacts\",\n    label: \"Contacts\",\n    iconComponent: ContactsIcon,\n  },\n  {\n    route: \"groups\",\n    label: \"Groups\",\n    iconComponent: GroupsIcon,\n  },\n  {\n    route: \"messages\",\n    label: \"Messages\",\n    iconComponent: ChatIcon,\n  },\n]\n\nconst SideBar = ({ client, me, setNav, nav, signOut, hostname, activity, globalLink, jwt }) => {\n  const [isTokenFound, setTokenFound] = useState(false);\n\n  useEffect(() => {\n    fetchToken(setTokenFound);\n  }, []);\n\n  const enableNotifications = () => {\n    console.log('Requesting permission...');\n    Notification.requestPermission().then((permission) => {\n    console.log(permission);\n      if (permission === 'granted') {\n        console.log('Notification permission granted.');\n        fetchToken(setTokenFound);\n      }\n    })\n  };\n\n  return (\n    <List sx={{\n      display: \"flex\",\n        flexDirection: \"column\",\n        width: \"240px\",\n        minWidth: \"240px\",\n        background: \"#091c38\",\n        color: \"white\"\n    }}>\n    <Profile client={client} me={me} signOut={signOut} activity={activity} jwt={jwt} />\n\n    {items.map(i => {\n      const IconComponent = i.iconComponent;\n\n      return (\n        <ListItem key={i.route} disablePadding sx={{ background: nav === i.route ? 'rgba(255,255,255,0.1)' : 'transparent' }}>\n        <ListItemButton onClick={() => setNav(i.route)}>\n        <ListItemIcon>\n        <IconComponent sx={{ color: \"white\" }} />\n        </ListItemIcon>\n\n        <ListItemText>\n        {i.label}\n        </ListItemText>\n        </ListItemButton>\n        </ListItem>\n      )})}\n\n    {globalLink && (\n      <ListItem disablePadding>\n      <ListItemButton onClick={() => window.open(globalLink)}>\n      <ListItemIcon>\n      <LinkIcon sx={{ color: \"white\" }} />\n      </ListItemIcon>\n\n      <ListItemText>Global Link</ListItemText>\n      </ListItemButton>\n      </ListItem>\n    )}\n\n    {isTokenFound &&\n        <ListItem onClick={enableNotifications}>Notifications enabled</ListItem>}\n\n    {!isTokenFound &&\n        <ListItem onClick={enableNotifications}>Enable Notifications</ListItem>}\n\n    <ListItem sx={{ mt: \"auto\", justifyContent: \"center\", color: \"#bbb\" }}>\n    {hostname}\n    </ListItem>\n    </List>\n  );\n};\n\nexport default SideBar;\n","import {\n  Box,\n  Button,\n  Card,\n  Stack,\n  TextField,\n  IconButton,\n  Autocomplete,\n  Menu,\n  MenuItem,\n  Divider,\n  Backdrop,\n} from \"@mui/material\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useDropzone } from 'react-dropzone'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { blue } from \"@mui/material/colors\";\n\nimport Linkify from 'react-linkify';\n// import { ReactTinyLink } from 'react-tiny-link'\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport db from './db';\n\nconst Message = ({ client, user, API_BASE, jwt, allUsers }) => {\n  const [members, setMembers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [showAddUserToRoom, setShowAddUserToRoom] = useState(false);\n  const scrollRef = useRef(null);\n  const fileRef = useRef(null);\n\n  const [roomListAnchorEl, setRoomListAnchorEl] = useState(null);\n  const showRoomList = Boolean(roomListAnchorEl);\n\n  const attachFile = async (files) => {\n    setUploading(true);\n    // upload all the files and get their URLs\n    const urls = await upload(files, client);\n    console.log('urls', urls);\n\n    // send out the notifications\n    urls.forEach((url) => {\n      if (url) {\n        const type = user.isRoom ? 'groupchat' : 'chat';\n        client.sendMessage({ to: user.jid, body: url, type });\n      } else {\n        console.log(\"upload failed\");\n      }\n    });\n    setUploading(false);\n  };\n\n  const onDrop = (files) => {\n    console.log(\"dropped files\", files);\n    attachFile(files);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, noClick: true, noKeyboard: true });\n\n  const messages = useLiveQuery(() => \n    user.isRoom\n      ? db.messages.where(\"group\").equals(user.jid).sortBy(\"timestamp\")\n      : db.messages.where(\"from\").equals(user.jid).or(\"to\").equals(user.jid).and((m) => !m.group).sortBy(\"timestamp\"),\n    [user], []);\n\n  const extendedMessages = messages\n    .map((message) => { // add user info\n      const user = allUsers.find((u) => message.from?.includes(u.user_id));\n      const name = user?.name || message.from;\n\n      return { ...message, user, name };\n    });\n\n  const removeContact = async () => {\n    if (user.isRoom) {\n      await client.setRoomAffiliation(user.jid, client.config.jid, \"none\");\n      await client.leaveRoom(user.jid);\n    } else {\n      await client.removeRosterItem(user.jid);\n      await client.unsubscribe(user.jid);\n    }\n  };\n\n  const sendMessage = () => {\n    if (!message) {\n      return;\n    }\n\n    const type = user.isRoom ? 'groupchat' : 'chat';\n    client.sendMessage({ to: user.jid, body: message, type, from: client.config.jid });\n    setMessage(\"\");\n  };\n\n  const invite = async () => {\n    const body = await createMeeting(API_BASE, jwt);\n    if (body.uuid) {\n      client.sendMessage({ to: user.jid, body: body.uuid, type: 'meeting-invite' });\n    }\n  };\n\n  const memberList = async (event) => {\n    const res = await client.getRoomMembers(user.jid);\n\n    setMembers(res.muc.users.map((m) => ({\n      ...m,\n      name: allUsers.find((u) => m.jid.includes(u.user_id))?.name,\n    })));\n\n    setRoomListAnchorEl(event.target);\n  };\n\n  const closeRoomList = () => setRoomListAnchorEl(null);\n  const openAddUser = () => {\n    closeRoomList();\n    setShowAddUserToRoom(true);\n  }\n\n  useEffect(() => {\n    scrollRef.current.scrollTop = scrollRef?.current?.scrollHeight;\n  }, [messages]);\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <Stack sx={{ flexGrow: 1 }} {...getRootProps()}>\n      <AddUserToRoomPrompt\n        client={client}\n        room={user}\n        open={showAddUserToRoom}\n        close={() => setShowAddUserToRoom(false) }\n        allUsers={allOtherUsers}\n      />\n\n      <Backdrop open={isDragActive} sx={{ color: \"white\" }}><h3>Drop files to upload</h3></Backdrop>\n\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{user.name}</h2>\n\n        <IconButton sx={{ ml: \"auto\" }} onClick={removeContact} title={user.isRoom ? \"Leave Group\" : \"Remove Contact\"}>\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n\n        {user.isRoom && <>\n          <IconButton onClick={memberList}>\n            <GroupAddIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={roomListAnchorEl}\n            open={showRoomList}\n            onClose={closeRoomList}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {members.map((m) => (\n              <MenuItem key={m.jid}>{m.name}</MenuItem>\n            ))}\n            <Divider />\n            <MenuItem onClick={openAddUser}>Add</MenuItem>\n          </Menu>\n        </>}\n\n        <IconButton onClick={invite}>\n          <VideoCameraFrontIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }} ref={scrollRef}>\n        {extendedMessages.map(m => <Chat key={m.id} message={m} client={client} isRoom={user.isRoom} />)}\n      </Stack>\n\n      <Stack direction=\"row\" sx={{ p: 1 }}>\n        <TextField\n          onChange={(e) => setMessage(e.target.value)}\n          value={message}\n          sx={{ flexGrow: 1 }}\n          placeholder=\"Send a message...\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage() }\n          InputProps={{ endAdornment: <>\n            {uploading\n              ? <CircularProgress />\n              : <IconButton style={{ flexShrink: \"0\" }} onClick={() => fileRef.current.click()}>\n                <AttachFileIcon fontSize=\"inherit\" />\n                <input\n                  disabled={uploading}\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  ref={fileRef}\n                  onChange={(e) => attachFile(e.target.files)}\n                  />\n              </IconButton>}\n            <Button onClick={sendMessage}>Send</Button>\n          </>}}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n\nconst Chat = ({ message, client, isRoom }) => {\n  const mine = !message.from || message.from.includes(client.config.jid);\n\n  // if we're in a room, grab the user's jid from the `from` field\n  // if it's a direct chat, grab just the bare JID\n  // const jid = message.from?.split(\"/\")[isRoom ? 1 : 0];\n\n  return (\n    <Box\n      className={`chat-message ${mine ? \"mine\" : \"\"}`}\n      sx={{\n        background: mine ? blue[700] : \"white\",\n        color: mine ? \"white\" : \"black\",\n        p: 1.5,\n        mx: 2, my: 1,\n        borderRadius: 2,\n        marginLeft: mine ? \"auto\" : 0,\n        marginRight: mine ? 0 : \"auto\",\n        wordBreak: \"break-all\",\n      }}\n    >\n      <span style={{ fontSize: \"0.8em\" }}>\n        <b>{message.name}</b>\n          <span style={{ marginLeft: \"1em\", color: mine ? \"#eee\" : \"#666\" }}>{message.timestamp?.toLocaleString()}</span>\n      </span>\n      <br />\n      <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\n        <a target=\"blank\" href={decoratedHref} key={key} style={{ color: \"inherit\" }}>\n          {decoratedText}\n        </a>\n      )}>\n        {isImage(message.body) && <div>\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\">\n            <img src={message.body} alt=\"\" style={{ maxHeight: \"50vh\", maxWidth: \"70%\" }} />\n          </a>\n        </div>}\n\n        {isFile(message.body) && !isImage(message.body) && (\n          <a href={message.body} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: \"none\" }}>\n            <Card sx={{ background: \"#eee\", p: 1, mt: 1 }}>\n              <Stack direction=\"row\">\n                <FileDownloadIcon sx={{ mr: 1 }} />{nameFromUrl(message.body)}\n              </Stack>\n            </Card>\n          </a>\n        )}\n\n        {!isImage(message.body) && !isFile(message.body) && message.body}\n      </Linkify>\n    </Box>\n  );\n}\n\nasync function createMeeting(API_BASE, jwt) {\n  const url = `${API_BASE}/api/meeting`;\n  const mstart = parseInt(new Date().getTime() / 1000);\n\n  const formData = new FormData();\n  formData.append(\"name\", \"Instant Meeting\");\n  formData.append(\"mstart\", mstart.toString());\n  formData.append(\"duration\", \"3600\");\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: jwt,\n    },\n    body: formData,\n  }).then(res => res.json());\n};\n\nconst AddUserToRoomPrompt = ({ open, close, allUsers, client, room }) => {\n  const [user, setUser] = useState(\"\");\n\n  const onAdd = () => {\n    const jid = `${user}@${client.config.server}`;\n    client.setRoomAffiliation(room.jid, jid, \"member\")\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add User to Room</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setUser(u.id)}\n          options={allUsers.map(u => ({\n            label: `${u.name} (${u.email})`,\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst upload = async (files, client) => {\n  return await Promise.all(Array.from(files).map(async (f) => {\n    const { name, size, type: mediaType } = f; // TODO files with spaces in name fail\n    const service = await client.getUploadService();\n    const slot = await client.getUploadSlot(service.jid, { name, size, mediaType })\n    const { download: downloadUrl, upload: { url: uploadUrl } } = slot;\n    try {\n      await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: f,\n        headers: { \"x-amz-acl\": \"public-read\" },\n      });\n      return downloadUrl;\n    } catch(e) {\n      return null;\n    }\n  }));\n};\n\nexport default Message;\n\nfunction isUrl(string) {\n  let url;\n  \n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;  \n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction isFile(string) {\n  return isUrl(string) && string.match(/amazonaws.*fileshare/);\n}\n\nfunction isImage(url) {\n  return /\\.(jpg|jpeg|png|webp|avif|gif|svg)$/.test(url);\n}\n\nfunction nameFromUrl(url) {\n  const parts = url.split(\"/\");\n  return parts[parts.length - 1];\n}\n\n","import { useState, useEffect } from \"react\";\n\nimport {\n  Popover,\n  Badge,\n  Box,\n  Stack,\n  Avatar,\n  Typography,\n  TextField,\n} from \"@mui/material\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nconst Contact = ({ client, anchorEl, user, onClose }) => {\n  console.log(\"rendering Contact card\", user);\n  const [loading, setLoading] = useState(true);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  const open = Boolean(anchorEl);\n\n  useEffect(async () => {\n    try {\n      const res = await client.getVCard(user.jid);\n      console.log('got user vcard', res);\n\n      setFullName(res.fullName || \"\");\n\n      res.records?.forEach(r => {\n        if (r.type === \"tel\") {\n          setPhone(r.value);\n        } else if (r.type === \"title\") {\n          setTitle(r.value);\n        } else if (r.type === \"organization\") {\n          setOrganization(r.value);\n        }\n      });\n\n      setLoading(false);\n    } catch(e) {\n      setLoading(false);\n    }\n\n  }, [anchorEl]);\n\n  const status = user.isRoom ? '' : user.status;\n  const color = {\n    available: \"#51b397\",\n    away: \"#f0a73e\",\n    unavailable: \"gray\",\n    \"in-meeting\": \"#ea3323\",\n  }[status] || \"gray\";\n\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n    >\n      <Box sx={{ p: 2 }}>\n        <Stack direction=\"row\">\n          <Badge\n            componentsProps={{\n              badge: {\n                sx: {\n                  backgroundColor: color,\n                  border: \"2px solid white\",\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                },\n              },\n            }}\n            overlap=\"circular\"\n            badgeContent=\" \"\n            invisible={true}\n            variant=\"dot\"\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n          >\n            <Avatar sx={{ width: 56, height: 56 }}>\n              {user.isRoom\n                ? <GroupsIcon />\n                : initials(user)}\n            </Avatar>\n          </Badge>\n          \n          <Box sx={{ pl: 2 }}>\n            <Typography sx={{ fontWeight: 'bold', p: 0, m: 0 }}>{user.name}</Typography>\n            {!user.isRoom && <div>{user.status}</div>}\n            {!user.isRoom && <div>{user.user.email}</div>}\n          </Box>\n        </Stack>\n\n        <br />\n\n        <div>{user.activity}</div>\n\n        <br />\n\n        {loading\n          ? <div>Loading...</div>\n          : <Stack sx={{ display: 'flex', gap: \"1em\" }}>\n            {false && fullName && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Full Name (TODO)\" defaultValue={fullName} />}\n            {phone && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Phone\" defaultValue={phone} />}\n            {organization && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Organization\" defaultValue={organization} />}\n            {title && <TextField size=\"small\" variant=\"standard\" InputProps={{ readOnly: true }} label=\"Title\" defaultValue={title} />}\n          </Stack>}\n      </Box>\n    </Popover>\n  );\n};\n\nexport default Contact;\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\n","import { useState } from \"react\";\n\nimport {\n  Badge,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  Avatar,\n  ListItemText,\n  TextField,\n  Paper,\n  Stack,\n  Autocomplete,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tabs,\n  Tab\n} from \"@mui/material\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from './message';\nimport Contact from './contact';\n\nconst AddRoomPrompt = ({ open, close, add }) => {\n  const [roomName, setRoomName] = useState(\"\");\n\n  const onAdd = () => {\n    add(roomName);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          sx={{ width: 400, my: 1 }}\n          onChange={(e) => setRoomName(e.target.value)}\n          label=\"Group name\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst AddContactPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Contact</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map((u) => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use teh name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Roster = ({\n  roster,\n  client,\n  allUsers,\n  API_BASE,\n  MUC_LIGHT_HOSTNAME,\n  jwt,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showAddRoom, setShowAddRoom] = useState(false);\n  const [tab, setTab] = useState(0);\n\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const showAddMenu = Boolean(menuAnchorEl);\n\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\n  const [focusedUser, setFocusedUser] = useState(null);\n\n  const openAddMenu = (event) => {\n    setMenuAnchorEl(event.currentTarget);\n  };\n\n  const closeAddMenu = () => {\n    setMenuAnchorEl(null);\n  };\n\n  const openContact = (event, user) => {\n    event.stopPropagation();\n    setFocusedUser(user);\n    setProfileAnchorEl(event.currentTarget);\n  }\n\n  const addContact = (uuid) => {\n    const jid = `${uuid}@${client.config.server}`;\n    client.subscribe(jid);\n  }\n\n  // TODO: this will use the Room API in the future\n  const addRoom = async (name) => {\n    const uuid = crypto.randomUUID();\n    const jid = `${uuid}@${MUC_LIGHT_HOSTNAME}`;\n    await client.joinRoom(jid);\n    client.configureRoom(jid, { fields: [ { name: 'roomname', value: name } ] });\n  }\n\n  // filter by search\n  const filteredRoster = roster.filter(r =>\n    r.name?.toLowerCase().includes(search.toLowerCase()) || r.jid?.includes(search))\n  .filter(r => (tab === 0 && !r.isRoom) || (tab === 1 && r.isRoom));\n\n  const allOtherUsers = allUsers.filter((u) => !client.config.jid.includes(u.user_id));\n\n  return (\n    <>\n      <AddContactPrompt\n        add={addContact}\n        close={() => setShowAddContact(false)}\n        open={showAddContact}\n        allUsers={allOtherUsers}\n      />\n\n      <AddRoomPrompt\n        add={addRoom}\n        close={() => setShowAddRoom(false)}\n        open={showAddRoom}\n      />\n\n      {profileAnchorEl && focusedUser &&\n        <Contact client={client} user={focusedUser} anchorEl={profileAnchorEl} onClose={() => setProfileAnchorEl(null)}/>}\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Contacts</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={openAddMenu}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={menuAnchorEl}\n              open={showAddMenu}\n              onClose={closeAddMenu}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button',\n              }}\n            >\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddContact(true)}}>Add Contact</MenuItem>\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddRoom(true)}}>Add Group</MenuItem>\n            </Menu>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Contacts\" index={0} />\n            <Tab label=\"MUCs\" index={1} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredRoster.map((u) => {\n            const status = u.isRoom ? '' : u.status;\n            const color = {\n              available: \"#51b397\",\n              away: \"#f0a73e\",\n              unavailable: \"gray\",\n              \"in-meeting\": \"#ea3323\",\n            }[status] || \"gray\";\n\n            return (\n              <ListItem key={u.jid} disablePadding>\n                <ListItemButton onClick={() => setSubNav(u)}>\n                  <ListItemAvatar>\n                    <Badge\n                      componentsProps={{\n                        badge: {\n                          sx: {\n                            backgroundColor: color,\n                            border: \"2px solid white\",\n                            width: 14,\n                            height: 14,\n                            borderRadius: 7,\n                          },\n                        },\n                      }}\n                      overlap=\"circular\"\n                      badgeContent=\" \"\n                      invisible={u.isRoom}\n                      variant=\"dot\"\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                    >\n                      <Avatar onClick={(e) => openContact(e, u)}>\n                        {u.isRoom\n                          ? <GroupsIcon />\n                          : initials(u)}\n                      </Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n\n                  <ListItemText\n                    primary={<>{u.name} {!u.isRoom ? <span style={{ color: \"#888\" }}>- {u.user?.email}</span> : ''}</>}\n                    primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                    secondary={u.activity ? u.activity : \"\"}\n                    secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                    />\n                </ListItemButton>\n              </ListItem>\n            )})}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Roster;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  OutlinedInput,\n  FormControl,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Chip,\n  Tabs,\n  Tab,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\n\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst AddGroupPrompt = ({ open, close, allUsers, roster, client }) => {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [type, setType] = useState(\"private\");\n\n  const onAdd = () => {\n    users.forEach((u) => {\n      // add this group to this user's existing groups\n      const groups = roster.find(i => i.jid.includes(u))?.groups?.concat([title]) || [title];\n      client.updateRosterItem({ jid: u, groups });\n    });\n    setUsers([]);\n    setTitle(\"\");\n    close();\n  }\n\n  const handleUserChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setUsers(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const removeUser = (value) => {\n    setUsers(users.filter(u => u !== value));\n    // TODO\n    console.log(\"removeUser\", value);\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>New Group</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          type=\"text\"\n          label=\"Title\"\n          variant=\"outlined\"\n          fullWidth\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          sx={{ my: 1 }}\n          />\n\n        <FormControl sx={{ my: 1 }}>\n          <RadioGroup row value={type} onChange={(e) => setType(e.target.value)}>\n            <FormControlLabel value=\"private\" control={<Radio />} label=\"Private\" />\n            <FormControlLabel disabled value=\"public\" control={<Radio />} label=\"Public\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Select\n          sx={{ my: 1 }}\n          fullWidth\n          multiple\n          value={users}\n          onChange={handleUserChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} onMouseDown={(e) => e.stopPropagation()} onDelete={() => removeUser(value)} />\n              ))}\n            </Box>\n          )}\n        >\n          {roster.filter(i => !i.isRoom).map((user) => (\n            <MenuItem\n              key={user.jid}\n              value={user.jid}\n            >\n              {user.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst Group = ({ group, roster, client }) => {\n  if (!group) { return null; }\n\n  const editTitle = () => {\n    const title = prompt(\"New Title\", group.name); // TODO make sure name isn't taken\n\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups, including this one\n        .filter(g => g !== group.name) // remove the previous group name\n        .concat([title]); // add the new name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  };\n\n  const deleteGroup = () => {\n    group.users.forEach(u => { // for each user in the group\n      const groups = u.groups // get their list of groups\n        .filter(g => g !== group.name) // remove this group name\n\n      client.updateRosterItem({ jid: u.jid, groups });\n    });\n  }\n\n  return <div>\n    <Stack sx={{ flexGrow: 1 }}>\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{group.name}</h2>\n        <EditIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={editTitle} />\n        <DeleteIcon sx={{ mx: 1, cursor: \"pointer\" }} onClick={deleteGroup} />\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }}>\n        <List>\n          {group.users.map(u => (\n            <ListItem key={u.jid}>\n              {u.name}\n            </ListItem>\n          ))}\n        </List>\n      </Stack>\n    </Stack>\n  </div>;\n}\n\nconst Groups = ({ client, allUsers, roster, jwt, API_BASE, privateGroups }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [tab, setTab] = useState(0);\n  const [showAddGroup, setShowAddGroup] = useState(false);\n\n  const filteredGroups = privateGroups?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s);\n  });\n\n  return (\n    <>\n      <AddGroupPrompt\n        close={() => setShowAddGroup(false)}\n        open={showAddGroup}\n        allUsers={allUsers}\n        roster={roster}\n        client={client}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Groups</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={() => setShowAddGroup(true)}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tab} onChange={(_, idx) => setTab(idx)} aria-label=\"basic tabs example\">\n            <Tab label=\"Private\" index={0} />\n          </Tabs>\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredGroups.map((g) => (\n            <ListItem key={g.name} disablePadding>\n              <ListItemButton onClick={() => setSubNav(g)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {initials(g)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={g.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={g.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={g.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        <Group group={subNav} roster={roster} client={client} />\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Groups;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Paper,\n  Stack,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Autocomplete,\n} from \"@mui/material\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\n\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from \"./message\";\n\nimport db from \"./db\";\n\nconst AddChatPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Find a User</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map(u => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use the name property\nconst userDisplayName = (u) => `${u.first_name} ${u.last_name} (${u.email})`;\n\nconst Messages = ({ client, allUsers, roster, jwt, API_BASE }) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddChat, setShowAddChat] = useState(false);\n\n  // pull out all of the unique IDs from all of the messages\n  const tos = useLiveQuery(() => db.messages.orderBy(\"to\").uniqueKeys()) || [];\n  const froms = useLiveQuery(() => db.messages.orderBy(\"from\").uniqueKeys()) || [];\n  const groups = useLiveQuery(() => db.messages.orderBy(\"group\").uniqueKeys()) || [];\n  const jids = tos.concat(froms).concat(groups)\n  .filter((v, i, a) => a.indexOf(v) === i) // all unique jids\n  .filter((jid) => jid !== client.config.jid); // that aren't you\n\n  const users = jids?.map(jid => { // add names\n    const user = allUsers.find((u) => jid.includes(u.user_id));\n    const name = user?.name // user names come from all users\n      || roster.find((r) => r.jid === jid)?.name // room names will be in your roster\n      || jid;\n    const isRoom = groups.includes(jid);\n\n    return { jid, user, name, isRoom };\n  });\n\n  const filteredUsers = users?.filter((u) => { // filter by search\n    const s = search.toLowerCase();\n    return u.name?.toLowerCase().includes(s)\n      || s.includes(u.name?.toLowerCase())\n      || u.user?.email?.includes(s)\n      || s.includes(u.user?.email);\n  });\n\n  const addChat = (uuid) => {\n    console.log(\"addChat\", uuid);\n    const jid = `${uuid}@${client.config.server}`;\n    console.log(\"jid\", jid);\n    // TODO\n  };\n\n  return (\n    <>\n      <AddChatPrompt\n        add={addChat}\n        close={() => setShowAddChat(false)}\n        open={showAddChat}\n        allUsers={allUsers}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Chat</h2>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n            />\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredUsers.map((u) => (\n            <ListItem key={u.jid} disablePadding>\n              <ListItemButton onClick={() => setSubNav(u)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {u.isRoom\n                      ? <GroupsIcon />\n                      : initials(u)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={u.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={u.user?.email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={u.jid}\n                />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\n// TODO put this is allUsers state\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Messages;\n","import { Agent, JXT } from 'stanza';\nimport { IQ, ReceivedMessage } from 'stanza/protocol';\n\n// 1. Declare our new custom stanza extension type\nexport interface InboxMessage extends ReceivedMessage {\n  result?: InboxResult;\n}\n\nexport interface InboxResult {\n  forwarded?: InboxMessage;\n}\n\nexport interface InboxMessage {\n  message?: string;\n}\n\n// 2. Begin injecting our plugin's type information into StanzaJS.\ndeclare module 'stanza' {\n\n    // 3. Declare a new method for the StanzaJS agent\n    export interface Agent {\n        getInbox(): Promise<IQ>\n    }\n\n    // 4. Declare our event types. (Event names are the fields in AgentEvents.)\n    export interface AgentEvents {\n      inbox: InboxMessage;\n    }\n\n    // 5. Stanza definitions MUST be placed in the Stanzas namespace\n    namespace Stanzas {\n\n        // 6. Attach our new definition to Message stanzas\n        export interface Message {\n            result?: InboxResult;\n        }\n    }\n}\n\n\n// 7. Create a plugin function\nexport default function (client: Agent, stanzas: JXT.Registry) {\n\n    // 8. Create and register our custom stanza definition\n    stanzas.define({\n        element: 'result',\n        fields: {\n            unread: JXT.attribute('unread'),\n            queryid: JXT.attribute('queryid'),\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'message.result'\n    });\n\n    stanzas.define({\n        element: 'forwarded',\n        fields: {\n            unread: JXT.attribute('unread')\n        },\n        namespace: 'urn:xmpp:forward:0',\n        path: 'message.result.forwarded'\n    });\n\n    stanzas.define({\n        element: 'inbox',\n        fields: {\n            result: JXT.text()\n        },\n        namespace: 'erlang-solutions.com:xmpp:inbox:0',\n        path: 'iq.inbox'\n    });\n\n    // 9. Add API to the StanzaJS agent for sending\n    client.getInbox = () => {\n        return client.sendIQ({\n            type: 'set',\n            inbox: \"test\",\n        });\n    };\n\n    // 10. Listen for incoming inbox data and emit our own event\n    client.on('message', msg => {\n        if (msg.result) {\n            client.emit('inbox', msg);\n        }\n    });\n};\n","import { useState, useEffect, useCallback } from \"react\";\nimport * as XMPP from \"stanza\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\n\nimport db from \"./db\";\nimport \"./App.css\";\nimport SideBar from \"./sidebar\";\nimport Roster from \"./roster\";\nimport Groups from \"./groups\";\nimport Messages from \"./messages\";\nimport { Auth } from \"aws-amplify\";\n\nimport IqInbox from './inbox.ts';\n\nwindow.db = db;\n\nconst PROTOCOL = \"wss\";\n// const lastPort = localStorage.getItem(\"PORT\");\nconst PORT = prompt(\"XMPP Port\", \"5443\");\nconst ENDPOINT = \"ws-xmpp\";\n\nconst resource = localStorage.getItem(\"xmpp-resource\") || crypto.randomUUID();\nlocalStorage.setItem(\"xmpp-resource\", resource);\n\nconst initXMPP = async (jid, password, hostname) =>\n  XMPP.createClient({\n    jid,\n    password,\n    resource,\n    transports: {\n      websocket: `${PROTOCOL}://${hostname}:${PORT}/${ENDPOINT}`,\n    },\n  });\n\nconst App = ({ signOutAWS, user, hostname }) => {\n  const [client, setClient] = useState(null);\n  const [jwt, setJwt] = useState(\"\");\n  const [roster, setRoster] = useState([]);\n  const [presence, setPresence] = useState({});\n  const [activities, setActivities] = useState({});\n  const [activity, setActivity] = useState(\"\");\n  const [incomingInvites, setIncomingInvites] = useState([]);\n  const [inviteResponses, setInviteResponses] = useState({});\n  const [allUsers, setAllUsers] = useState([]);\n  const [nav, setNav] = useState(\"contacts\");\n  const [connected, setConnected] = useState(false);\n  const [server] = useState(hostname);\n  const [globalLink, setGlobalLink] = useState(null);\n\n  const [serviceName, ...[domain]] = server.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n  const xmppHostname = `${serviceName}-msg.${domain}`; // e.g. saas-msg.visionable.one\n  const mucHostname = `muclight.${xmppHostname}`; // e.g. muclight.saas-msg.visionable.one\n\n  const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n\n  const signIn = async () => {\n    if (client) {\n      return; // only sign in once\n    }\n\n    if (localStorage.getItem(\"username\") !== user.username) {\n      await db.messages.clear();\n    }\n    localStorage.setItem(\"username\", user.username);\n\n    try {\n      const { signInUserSession: session } = user;\n      const jwt = session.idToken.jwtToken;\n      setJwt(jwt);\n      const jid = `${user.username}@${xmppHostname}`;\n      const xmpp = await initXMPP(jid, jwt, xmppHostname);\n\n      xmpp.use(IqInbox);\n\n      setClient(xmpp);\n      setConnected(true);\n\n      const cognitoUsers = await getAllUsers(jwt, apiBase);\n      const extendedUsers = cognitoUsers.map((u) => ({ ...u, name: userFullName(u) }));\n      setAllUsers(extendedUsers);\n\n      const accountInfo = await getAccountInfo(jwt, apiBase);\n      setGlobalLink(getGlobalLink(accountInfo));\n\n      window.client = xmpp;\n\n      xmpp.on(\"session:started\", async () => {\n        console.log(\"session:started\");\n        xmpp.updateCaps();\n        xmpp.sendPresence({\n          legacyCapabilities: xmpp.disco.getCaps() // have to enable this to get PEP notifications\n        });\n        xmpp.enableKeepAlive();\n        xmpp.enableCarbons();\n\n        const roster = (await xmpp.getRoster()).items;\n        setRoster(roster);\n\n        // get \"inbox\"\n        // const res = await xmpp.getInbox();\n        // console.log(\"INBOX RES\", res);\n\n        // Get all of the messages up until the last one I've seen\n        // const lastMessage = await db.messages.orderBy(\"timestamp\").last();\n        // getAllMessages({ client: xmpp, start: lastMessage?.timestamp });\n\n        // Get the last few messages for each of our roster items\n        /*\n        roster.forEach((r) => {\n          if (r.groups.length) {\n            xmpp.searchHistory({ to: r.jid, paging: { before: \"\" }}); // 'to' for MUCs\n          } else {\n            xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }});\n          }\n        });\n        */\n      });\n\n      xmpp.on(\"message\", (message) => {\n        if (message.type === 'meeting-invite') {\n          setIncomingInvites((prev) => [...prev, message]);\n        } else if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"message:sent\", (message) => {\n        if (message.type === 'meeting-invite') {\n          // TODO: display something in the chat\n        } else if (message.type === \"chat\") {\n          // TODO: until acked, put a pending status\n          db.messages.put({\n            id: message.id,\n            from: xmpp.config.jid,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"mam:item\", (mam) => {\n        const message = mam.archive?.item?.message;\n        const timestamp = mam.archive?.item?.delay?.timestamp;\n        if (message.type === \"chat\" || message.type === \"groupchat\") {\n          const [before, after] = message.from.split(\"/\");\n          const group = message.type === \"chat\" ? null : before;\n          const from = message.type === \"chat\" ? before : after;\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group,\n            timestamp: new Date(),\n          }, message.id)\n        }\n      });\n\n      xmpp.on(\"inbox\", (msg) => {\n        const timestamp = msg.result?.forwarded?.delay?.stamp;\n        const message = msg.result?.forwarded?.message;\n        console.log(\"inbox message\", message)\n\n        if (!message) { return; }\n        const { to } = message;\n\n        if (message.type === \"chat\") {\n          const [from] = message.from.split(\"/\");\n\n          db.messages.put({\n            id: message.id,\n            from,\n            to: message.to,\n            body: message.body,\n            type: message.type,\n            group: null,\n            timestamp,\n          }, message.id)\n        } else if (message.type === \"groupchat\") {\n\n        }\n      });\n\n      xmpp.on(\"subscribe\", (data) => { // if someone subscribes to us..\n        xmpp.acceptSubscription(data.from); // auto accept\n        xmpp.subscribe(data.from);\n      });\n\n      xmpp.on(\"unsubscribe\", () => { // if someone removes me from their roster\n        // xmpp.unsubscribe(data.from); // remove them from ours?\n      });\n\n      xmpp.on(\"roster:update\", async (data) => { // roster item change\n        /*\n        data.roster.items.forEach((r) => {\n          xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }}); // get the last few messages\n        });\n        */\n\n        setRoster((await xmpp.getRoster()).items)\n      });\n\n      // if someone adds you to a room, auto accept it\n      xmpp.on(\"muc:invite\", (data) => {\n        setTimeout(() => {\n          xmpp.joinRoom(data.room);\n        }, 1000);\n      });\n\n      // created or added to a room\n      xmpp.on(\"muc:available\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      // no longer in a room\n      xmpp.on(\"muc:unavailable\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      xmpp.on(\"presence\", (data) => {\n        setPresence((prev) => ({ ...prev, [data.from]: data }))\n      });\n\n      xmpp.on(\"activity\", (data) => {\n        const { jid, activity: { text } } = data;\n        console.log(\"ACTIVITY\", jid, text);\n        if (jid === xmpp.config.jid) {\n          setActivity(text);\n        } else {\n          setActivities((prev) => ({ ...prev, [jid]: text }));\n        }\n      });\n\n      xmpp.on(\"*\", async (type, data) => {\n        console.log(type, data);\n      });\n\n      // on disconnect, retry\n      xmpp.on(\"disconnected\", () => {\n        console.log(\"DISCONNECTED\");\n        setConnected(false);\n        // setTimeout(xmpp.connect, 3000)\n      })\n\n      xmpp.on(\"connected\", () => {\n        setConnected(true);\n      })\n\n      xmpp.connect();\n\n      window.addEventListener('beforeunload', function(event) {\n        console.log('window.beforeunload');\n        xmpp.disconnect();\n      });\n    } catch (e) {\n      console.error(\"caught\", e);\n    }\n  };\n\n  useEffect(signIn, [user]);\n\n  // extend the roster with info from the User API, presence, etc.\n  const extendedRoster = roster.map(r => {\n    const user = allUsers.find(u => r.jid.includes(u.user_id));\n    const name = r.name // if the roster item has a name\n      ? r.name // use that\n      : user // otherwise, if there's a corresponding user from the User API\n        ? userFullName(user) // get the name of that\n        : r.jid;// otherwise, just show their JID\n\n    // grab all of the resources that we've been given presence for this user\n    const statuses = Object.values(presence)\n      .filter((u) => u.from.includes(r.jid))\n      .filter((u) => u.type !== 'unavailable')\n      .map((u) => u.status || 'available');\n\n    const status = statuses.length === 0 // if they have no resources online\n      ? 'unavailable' // they're unavailable\n      : statuses.some((s) => s === 'in-meeting') // if _any_ resource is in a meeting\n        ? 'in-meeting' // show in-meeting\n        : statuses.every((s) => s === 'away') // if _all_ of their resources are away\n          ? 'away' // show away\n          : statuses.every((s) => s === 'available') // if _all_ of their resources are available\n            ? 'available' // show available\n            : 'available'; // otherwise, if they have other online resources, show available\n\n    return {\n      ...r,\n      user,\n      name,\n      status,\n      statuses,\n      activity: activities[r.jid],\n      isRoom: !!r.groups?.[0]?.includes(\"muc\"),\n    };\n  });\n  window.presence = presence;\n  window.roster = extendedRoster;\n  window.activities = activities;\n\n  console.log('new presence list', presence);\n  console.log(\"extended roster\", extendedRoster);\n\n  const privateGroups = extendedRoster\n    .filter(i => !i.isRoom)\n    .map(i => i.groups)\n    .flat()\n    .filter((value, index, self) => self.indexOf(value) === index)\n    .map(g => ({ name: g, users: extendedRoster.filter(i => i.groups.includes(g)) }));\n\n  // find my own user from the User API\n  const me = allUsers.find((u) => client.jid.match(u.user_id)) || {};\n\n  const reconnect = useCallback(async () => {\n    // client.config.credentials.password = user.signInUserSession.idToken.jwtToken;\n    const password = Auth.currentSession.idToken.jwtToken;\n    client.updateConfig({ ...(client.config.credentials), password });\n    console.log(\"reconnecting. password:\", password);\n    client.connect();\n  }, [client]);\n\n  const signOut = async () => {\n    db.messages.clear();\n    client.disconnect();\n    setConnected(false);\n    setRoster([]);\n    setPresence({});\n    localStorage.removeItem(\"visionable-xmpp-hostname\"); // grab this from context\n    signOutAWS();\n  };\n\n  const acceptInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"accept\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-accept' });\n  };\n\n  const rejectInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"reject\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-reject' });\n  };\n\n  if (!client) {\n    return (\n      <div className=\"App\">Loading</div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <SideBar\n        nav={nav}\n        setNav={setNav}\n        signOut={signOut}\n        client={client}\n        me={me}\n        hostname={hostname}\n        activity={activity}\n        globalLink={globalLink}\n        jwt={jwt}\n        />\n\n      <Snackbar\n        onClick={reconnect}\n        open={!connected}\n        anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n        sx={{ cursor: \"pointer\" }}\n      >\n        <Alert severity=\"error\" sx={{ width: '100%' }}>Disconnected. Click here to reconnect</Alert>\n      </Snackbar>\n\n      <IncomingInvites\n        accept={acceptInvite}\n        reject={rejectInvite}\n        invites={incomingInvites}\n        responses={inviteResponses} />\n\n      <Box className=\"main\">\n        {nav === 'contacts'\n          ? <Roster\n            roster={extendedRoster}\n            // presence={presence}\n            allUsers={allUsers}\n            client={client}\n            API_BASE={apiBase}\n            MUC_LIGHT_HOSTNAME={mucHostname}\n            jwt={jwt}\n            />\n          : nav === 'messages'\n            ? <Messages\n              roster={extendedRoster}\n              // presence={presence}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n            : nav === 'groups'\n              ? <Groups\n              privateGroups={privateGroups}\n              roster={extendedRoster}\n              allUsers={allUsers}\n              client={client}\n              API_BASE={apiBase}\n              MUC_LIGHT_HOSTNAME={mucHostname}\n              jwt={jwt}\n              />\n              : null}\n      </Box>\n    </div>\n  );\n};\n\nconst IncomingInvites = ({ accept, reject, invites, responses }) =>\n  invites.filter((m) => !responses[m.id]).map((m) => (\n    <Dialog key={m.id} open={true}>\n      <DialogTitle>Meeting Invite</DialogTitle>\n      <DialogContent>\n        <p>Invite ID: {m.id}</p>\n        <p>From: {m.from}</p>\n        <p>Meeting ID: {m.body}</p>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" onClick={() => reject(m)}>Reject</Button>\n        <Button onClick={() => accept(m)}>Accept</Button>\n      </DialogActions>\n    </Dialog>\n  ));\n\nconst getAllUsers = async (jwt, apiBase) => {\n  const res = await fetch(`${apiBase}/api/user`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : [];\n}\n\nfunction userFullName(user) {\n  return user?.name\n  ? user.name\n    : user?.display_name\n      ? user.display_name\n      : user?.first_name\n        ? `${user.first_name} ${user.last_name}`\n        : \"[No Name]\";\n}\n\nasync function getAllMessages({ client, start, after }) {\n  const paging = after ? { after } : {};\n  const { complete, paging: { last } } = await client.searchHistory({ start, paging });\n\n  if (!complete) {\n    getAllMessages({ client, after: last });\n  }\n}\n\nasync function getAccountInfo(jwt, apiBase) {\n  const res = await fetch(`${apiBase}/api/account/info`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : {};\n}\n\nfunction getGlobalLink(accountInfo) {\n  try {\n    return JSON.parse(accountInfo?.account_data || \"null\")?.globalLink;\n  } catch(e) {\n    return null;\n  }\n}\n\nexport default App;\n","import React, { useState, useEffect, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport Amplify from \"aws-amplify\";\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nconst Context = createContext({});\n\nconst HOSTNAME_KEY = \"visionable-xmpp-hostname\";\nconst lastHostname = localStorage.getItem(HOSTNAME_KEY);\nconst hostname = lastHostname || prompt(\"Enter hostname\", \"saas.visionable.one\");\nlocalStorage.setItem(HOSTNAME_KEY, hostname);\n\nconst AppContainer = () => {\n  const [config, setConfig] = useState(null);\n\n  const configure = async () => {\n    const json = await getServiceConfig(hostname)\n\n    Amplify.configure({\n      Auth: {\n        region: json.AWSRegion,\n        userPoolId: json.AWSUserPoolID,\n        userPoolWebClientId: json.AWSUserPoolClientID,\n      },\n    });\n\n    setConfig(json);\n  };\n\n  useEffect(() => configure(), []);\n\n  const value = {\n    HOSTNAME_KEY\n  };\n\n  return !config\n    ? null\n    : (\n      <Context.Provider value={value}>\n        <Authenticator\n          components={{\n            Header() {\n              return (\n                <div style={{ textAlign: \"center\", marginBottom: \"2em\" }}>\n                  <img\n                    alt=\"Visionable logo\"\n                    style={{ maxWidth: \"300px\" }}\n                    src=\"https://v3.visionable.io/images/visionable-logo.svg\" />\n                </div>\n              );\n            }\n          }}\n          signUpAttributes={[\n            'family_name',\n            'given_name',\n            'updated_at',\n          ]}\n          loginMechanisms={['email']}\n        >\n          {({ signOut, user }) => (\n            <App signOutAWS={signOut} user={user} hostname={hostname} />\n          )}\n        </Authenticator>\n      </Context.Provider>\n    );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nasync function getServiceConfig(hostname) {\n  try {\n    const [serviceName, ...[domain]] = hostname.split(/\\.(.*)/s); // split out the serviceName from the rest of the host\n    const apiBase = `https://${serviceName}-api.${domain}`; // e.g. saas-api.visionable.one\n    const res = await fetch(`${apiBase}/api/config`, { mode: \"cors\" });\n    return await res.json();\n  } catch(e) {\n    console.log(e);\n    alert(\"Error requesting configuration data for this service\");\n    localStorage.removeItem(HOSTNAME_KEY);\n    window.location.reload();\n  }\n}\n\nif ('serviceWorker'  in navigator) {\n  console.log(\"registering sw\");\n  navigator.serviceWorker.register('./firebase-messaging-sw.js')\n    .then(function(registration) {\n      console.log('Registration was successful: ', registration)\n    })\n    .catch(function(e) {\n      console.error('Registration has filed', e)\n    })\n}\n"],"sourceRoot":""}