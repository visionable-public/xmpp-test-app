{"version":3,"sources":["login.js","message.js","roster.js","profile.js","sidebar.js","App.js","index.js"],"names":["LoginView","loading","username","onChangeUsername","password","onChangePassword","error","signIn","Stack","spacing","sx","width","maxWidth","my","mx","TextField","label","disabled","onChange","value","onKeyDown","e","key","type","helperText","Button","variant","onClick","Chat","message","client","mine","isRoom","from","includes","config","jid","Box","className","background","blue","color","p","borderRadius","marginLeft","marginRight","body","createMeeting","API_BASE","jwt","a","url","mstart","parseInt","Date","getTime","formData","FormData","append","toString","fetch","method","headers","Authorization","then","res","json","AddUserToRoomPrompt","open","close","allUsers","room","useState","user","setUser","Dialog","onClose","DialogTitle","DialogContent","Autocomplete","_","u","id","options","map","name","user_email","user_id","renderInput","params","DialogActions","setRoomAffiliation","Message","messages","members","setMembers","setMessage","showAddUserToRoom","setShowAddUserToRoom","scrollRef","useRef","roomListAnchorEl","setRoomListAnchorEl","showRoomList","Boolean","filteredMessages","filter","m","to","removeContact","leaveRoom","removeRosterItem","unsubscribe","sendMessage","invite","console","log","uuid","memberList","event","getRoomMembers","muc","users","find","target","closeRoomList","useEffect","current","scrollTop","scrollHeight","flexGrow","direction","px","alignItems","IconButton","fontSize","Menu","anchorEl","MenuListProps","MenuItem","Divider","ml","overflow","ref","placeholder","onKeyPress","InputProps","endAdornment","AddRoomPrompt","add","roomName","setRoomName","AddContactPrompt","newContact","setNewContact","userDisplayName","user_firstname","user_lastname","initials","split","slice","n","substr","Roster","roster","roomMessages","MUC_LIGHT_HOSTNAME","me","search","setSearch","subNav","setSubNav","showAddContact","setShowAddContact","showAddRoom","setShowAddRoom","setAnchorEl","showAddMenu","closeAddMenu","addRoom","crypto","randomUUID","joinRoom","configureRoom","fields","filteredRoster","r","toLowerCase","chatMessages","server","subscribe","Paper","currentTarget","size","fullWidth","List","ListItem","disablePadding","ListItemButton","ListItemAvatar","Avatar","ListItemText","primary","primaryTypographyProps","textOverflow","whiteSpace","secondary","secondaryTypographyProps","title","Profile","handleClose","height","PaperProps","elevation","mt","mr","content","display","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","ListItemIcon","items","route","iconComponent","ContactsIcon","ChatIcon","SideBar","setNav","nav","signOut","flexDirection","minWidth","i","IconComponent","Logout","HOSTNAME","Amplify","configure","Auth","region","userPoolId","userPoolWebClientId","resource","localStorage","getItem","setItem","initXMPP","XMPP","transports","websocket","IncomingInvites","accept","reject","invites","responses","getAllUsers","ok","userFullName","user_displayname","App","setClient","setUsername","setPassword","setJid","setJwt","online","setOnline","setRoster","presence","setPresence","incomingInvites","setIncomingInvites","inviteResponses","setInviteResponses","setLoading","setError","setAllUsers","setMessages","setRoomMessages","connected","setConnected","session","signInUserSession","window","idToken","jwtToken","xmpp","cognitoUsers","extendedUsers","on","sendPresence","enableKeepAlive","enableCarbons","getRoster","forEach","searchHistory","with","paging","before","prev","mam","archive","item","data","connect","Hub","listen","payload","currentSession","credentials","extendedRoster","resources","Object","values","groups","match","reconnect","disconnect","Snackbar","cursor","Alert","severity","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.670204da.chunk.js","sourcesContent":["import {\n  Button,\n  TextField,\n  Stack\n} from \"@mui/material\";\n\nconst LoginView = ({\n  loading,\n  username,\n  onChangeUsername,\n  password,\n  onChangePassword,\n  error,\n  signIn\n  }) => (\n  <Stack spacing={3} sx={{ width: \"400px\", maxWidth: \"100%\", my: 3, mx: \"auto\" }}>\n    <TextField label=\"Username\" disabled={loading} onChange={onChangeUsername} value={username} error={!!error} />\n\n    <TextField label=\"Password\" disabled={loading} onKeyDown={(e) => e.key === \"Enter\" && signIn()} type=\"password\" onChange={onChangePassword} value={password} error={!!error} helperText={error && \"Invalid credentials\"} />\n\n    <Button variant=\"contained\" disabled={loading} onClick={signIn}> Sign in </Button>\n  </Stack>\n);\n\nexport default LoginView;\n","import {\n  Box,\n  Button,\n  Stack,\n  TextField,\n  IconButton,\n  Autocomplete,\n  Menu,\n  MenuItem,\n  Divider,\n} from \"@mui/material\";\nimport { useState, useEffect, useRef } from \"react\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport GroupAddIcon from '@mui/icons-material/GroupAdd';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VideoCameraFrontIcon from '@mui/icons-material/VideoCameraFront';\n\nimport { blue } from \"@mui/material/colors\";\n\nconst Message = ({ client, user, messages, API_BASE, jwt, allUsers }) => {\n  const [members, setMembers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [showAddUserToRoom, setShowAddUserToRoom] = useState(false);\n  const scrollRef = useRef(null);\n\n  const [roomListAnchorEl, setRoomListAnchorEl] = useState(null);\n  const showRoomList = Boolean(roomListAnchorEl);\n\n  const filteredMessages = messages.filter(m => m.from?.includes(user.jid) || m.to?.includes(user.jid));\n\n  const removeContact = async () => {\n    if (user.isRoom) {\n      // TODO: bare jid\n      await client.setRoomAffiliation(user.jid, client.jid, \"none\");\n      await client.leaveRoom(user.jid);\n    } else {\n      await client.removeRosterItem(user.jid);\n      await client.unsubscribe(user.jid);\n    }\n  };\n\n  const sendMessage = () => {\n    if (!message) {\n      return;\n    }\n\n    const type = user.isRoom ? 'groupchat' : 'chat';\n    client.sendMessage({ to: user.jid, body: message, type });\n    setMessage(\"\");\n  };\n\n  const invite = async () => {\n    const body = await createMeeting(API_BASE, jwt);\n    console.log(\"body\", body);\n    if (body.uuid) {\n      client.sendMessage({ to: user.jid, body: body.uuid, type: 'meeting-invite' });\n    }\n  };\n\n  const memberList = async (event) => {\n    const res = await client.getRoomMembers(user.jid);\n\n    setMembers(res.muc.users.map((m) => ({\n      ...m,\n      name: allUsers.find((u) => m.jid.includes(u.user_id))?.name,\n    })));\n\n    setRoomListAnchorEl(event.target);\n  };\n\n  const closeRoomList = () => setRoomListAnchorEl(null);\n  const openAddUser = () => {\n    closeRoomList();\n    setShowAddUserToRoom(true);\n  }\n\n  useEffect(() => {\n    scrollRef.current.scrollTop = scrollRef?.current?.scrollHeight;\n  }, [filteredMessages]);\n\n  return (\n    <Stack sx={{ flexGrow: 1 }}>\n      <AddUserToRoomPrompt\n        client={client}\n        room={user}\n        open={showAddUserToRoom}\n        close={() => setShowAddUserToRoom(false) }\n        allUsers={allUsers}\n      />\n\n      <Stack direction=\"row\" sx={{ px: 2, background: \"white\", alignItems: \"center\" }}>\n        <h2>{user.name}</h2>\n\n        <IconButton onClick={removeContact}>\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n\n        {user.isRoom && <>\n          <IconButton onClick={memberList}>\n            <GroupAddIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={roomListAnchorEl}\n            open={showRoomList}\n            onClose={closeRoomList}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {members.map((m) => (\n              <MenuItem key={m.jid}>{m.name}</MenuItem>\n            ))}\n            <Divider />\n            <MenuItem onClick={openAddUser}>Add</MenuItem>\n          </Menu>\n        </>}\n\n        <IconButton sx={{ ml: \"auto\" }} onClick={invite}>\n          <VideoCameraFrontIcon fontSize=\"inherit\" />\n        </IconButton>\n      </Stack>\n\n      <Stack sx={{ background: \"#eee\", flexGrow: 1, overflow: \"auto\", px: \"10%\" }} ref={scrollRef}>\n        {filteredMessages.map(m => <Chat key={m.id} message={m} client={client} isRoom={user.isRoom} />)}\n      </Stack>\n\n      <Stack direction=\"row\" sx={{ p: 1 }}>\n        <TextField\n          onChange={(e) => setMessage(e.target.value)}\n          value={message}\n          sx={{ flexGrow: 1 }}\n          placeholder=\"Send a message...\"\n          onKeyPress={(e) => e.key === 'Enter' && sendMessage() }\n          InputProps={{ endAdornment: <Button onClick={sendMessage}>Send</Button> }}\n        />\n\n        {/* <Button variant=\"primary\" onClick={sendMessage}>Send</Button> */}\n      </Stack>\n    </Stack>\n  );\n};\n\nconst Chat = ({ message, client, isRoom }) => {\n  const mine = !message.from || message.from.includes(client.config.jid);\n\n  // if we're in a room, grab the user's jid from the `from` field\n  // if it's a direct chat, grab just the bare JID\n  // const jid = message.from?.split(\"/\")[isRoom ? 1 : 0];\n\n  return (\n    <Box\n      className={`chat-message ${mine ? \"mine\" : \"\"}`}\n      sx={{\n        background: mine ? blue[700] : \"white\",\n        color: mine ? \"white\" : \"black\",\n        p: 2,\n        mx: 2, my: 1,\n        borderRadius: 3,\n        marginLeft: mine ? \"auto\" : 0,\n        marginRight: mine ? 0 : \"auto\",\n      }}\n    >\n      {message.body}\n    </Box>\n  );\n}\n\nasync function createMeeting(API_BASE, jwt) {\n  const url = `${API_BASE}/api/meeting`;\n  const mstart = parseInt(new Date().getTime() / 1000);\n\n  const formData = new FormData();\n  formData.append(\"name\", \"Instant Meeting\");\n  formData.append(\"mstart\", mstart.toString());\n  formData.append(\"duration\", \"3600\");\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: jwt,\n    },\n    body: formData,\n  }).then(res => res.json());\n};\n\nconst AddUserToRoomPrompt = ({ open, close, allUsers, client, room }) => {\n  const [user, setUser] = useState(\"\");\n\n  const onAdd = () => {\n    const jid = `${user}@saas-msg.visionable.one`; // TODO: use constant\n    client.setRoomAffiliation(room.jid, jid, \"member\")\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add User to Room</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setUser(u.id)}\n          options={allUsers.map(u => ({\n            label: `${u.name} (${u.user_email})`,\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Message;\n","import { useState } from \"react\";\n\nimport {\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  Avatar,\n  ListItemText,\n  TextField,\n  Paper,\n  Stack,\n  Autocomplete,\n  IconButton,\n  Menu,\n  MenuItem,\n} from \"@mui/material\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport AddIcon from '@mui/icons-material/Add';\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport Message from './message';\n\nconst AddRoomPrompt = ({ open, close, add }) => {\n  const [roomName, setRoomName] = useState(\"\");\n\n  const onAdd = () => {\n    add(roomName);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Room</DialogTitle>\n\n      <DialogContent>\n        <TextField\n          sx={{ width: 400, my: 1 }}\n          onChange={(e) => setRoomName(e.target.value)}\n          label=\"Room name\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst AddContactPrompt = ({ open, close, add, allUsers }) => {\n  const [newContact, setNewContact] = useState(\"\");\n\n  const onAdd = () => {\n    add(newContact);\n    close();\n  }\n\n  return (\n    <Dialog open={open} onClose={close}>\n      <DialogTitle>Add Contact</DialogTitle>\n\n      <DialogContent>\n        <Autocomplete\n          sx={{ width: 400, my: 1 }}\n          onChange={(_, u) => u && setNewContact(u.id)}\n          options={allUsers.map(u => ({\n            label: userDisplayName(u),\n            id: u.user_id,\n          }))}\n          renderInput={(params) => <TextField {...params} label=\"User\" />}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={close}>Cancel</Button>\n        <Button onClick={onAdd}>Add</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// TODO use teh name property\nconst userDisplayName = (u) => `${u.user_firstname} ${u.user_lastname} (${u.user_email})`;\n\nconst Roster = ({\n  roster,\n  // presence,\n  messages,\n  roomMessages,\n  client,\n  allUsers,\n  API_BASE,\n  MUC_LIGHT_HOSTNAME,\n  jwt,\n  me,\n}) => {\n  const [search, setSearch] = useState(\"\");\n  const [subNav, setSubNav] = useState(null);\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showAddRoom, setShowAddRoom] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const showAddMenu = Boolean(anchorEl);\n\n  const openAddMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeAddMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const addContact = (uuid) => {\n    const jid = `${uuid}@${client.config.server}`;\n    client.subscribe(jid);\n  }\n\n  // TODO: this will use the Room API in the future\n  const addRoom = async (name) => {\n    const uuid = crypto.randomUUID();\n    const jid = `${uuid}@${MUC_LIGHT_HOSTNAME}`;\n    const res = await client.joinRoom(jid);\n    console.log(\"created room!\", res);\n    client.configureRoom(jid, { fields: [ { name: 'roomname', value: name } ] });\n  }\n\n  // filter by search\n  const filteredRoster = roster.filter(r =>\n    r.name?.toLowerCase().includes(search.toLowerCase()) || r.jid?.includes(search));\n\n  const chatMessages = subNav && messages[subNav.jid]\n    ? messages[subNav.jid]\n    : [];\n\n  return (\n    <>\n      <AddContactPrompt\n        add={addContact}\n        close={() => setShowAddContact(false)}\n        open={showAddContact}\n        allUsers={allUsers}\n      />\n\n      <AddRoomPrompt\n        add={addRoom}\n        close={() => setShowAddRoom(false)}\n        open={showAddRoom}\n      />\n\n      <Paper className=\"scroll-list-container\" sx={{ width: 300 }}>\n        <Box sx={{ px: 2 }}>\n          <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n            <h2>Contacts</h2>\n\n            <IconButton sx={{ ml: \"auto\" }} onClick={openAddMenu}>\n              <AddIcon fontSize=\"inherit\" />\n            </IconButton>\n\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={showAddMenu}\n              onClose={closeAddMenu}\n              MenuListProps={{\n                'aria-labelledby': 'basic-button',\n              }}\n            >\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddContact(true)}}>Add Contact</MenuItem>\n              <MenuItem onClick={() => { closeAddMenu(); setShowAddRoom(true)}}>Add Room</MenuItem>\n            </Menu>\n          </Stack>\n\n          <TextField\n            type=\"search\"\n            label=\"Search\"\n            variant=\"filled\"\n            size=\"small\"\n            fullWidth\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </Box>\n\n        <List className=\"scroll-list\">\n          {filteredRoster.map((u) => (\n            <ListItem key={u.jid} disablePadding>\n              <ListItemButton onClick={() => setSubNav(u)}>\n                <ListItemAvatar>\n                  <Avatar>\n                    {u.isRoom\n                      ? <GroupsIcon />\n                      : initials(u)}\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText\n                  primary={u.name}\n                  primaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  secondary={u.user?.user_email}\n                  secondaryTypographyProps={{ textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }}\n                  title={u.jid}\n                >\n                </ListItemText>\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n\n      <Paper className=\"right-section\">\n        {subNav && <Message allUsers={allUsers} client={client} user={subNav} messages={chatMessages} API_BASE={API_BASE} jwt={jwt} />}\n      </Paper>\n    </>\n  );\n};\n\nfunction initials(u) {\n  return u.name?.split(\" \")?.slice(0, 2)?.map(n => n.substr(0, 1));\n}\n\nexport default Roster;\n","import { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport ListItem from '@mui/material/ListItem';\nimport PersonAdd from '@mui/icons-material/PersonAdd';\nimport Settings from '@mui/icons-material/Settings';\nimport Logout from '@mui/icons-material/Logout';\n\nconst Profile = ({ client, me }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <ListItem disablePadding>\n        <IconButton onClick={handleClick} sx={{ ml: 0.5 }}>\n          <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>\n        </IconButton>\n      </ListItem>\n\n      <Menu\n        anchorEl={anchorEl}\n        id=\"account-menu\"\n        open={open}\n        onClose={handleClose}\n        onClick={handleClose}\n        PaperProps={{\n          elevation: 0,\n          sx: {\n            overflow: 'visible',\n            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\n            mt: 1.5,\n            '& .MuiAvatar-root': {\n              width: 32,\n              height: 32,\n              ml: -0.5,\n              mr: 1,\n            },\n            '&:before': {\n              content: '\"\"',\n              display: 'block',\n              position: 'absolute',\n              top: 0,\n              right: 14,\n              width: 10,\n              height: 10,\n              bgcolor: 'background.paper',\n              transform: 'translateY(-50%) rotate(45deg)',\n              zIndex: 0,\n            },\n          },\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem>\n          <Avatar /> Profile\n        </MenuItem>\n        <MenuItem>\n          <Avatar /> My account\n        </MenuItem>\n        <Divider />\n        <MenuItem>\n          <ListItemIcon>\n            <PersonAdd fontSize=\"small\" />\n          </ListItemIcon>\n          Add another account\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <Settings fontSize=\"small\" />\n          </ListItemIcon>\n          Settings\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <Logout fontSize=\"small\" />\n          </ListItemIcon>\n          Logout\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default Profile;\n","import {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport {\n  Contacts as ContactsIcon,\n  Chat as ChatIcon,\n  Logout as LogoutIcon,\n} from \"@mui/icons-material\";\n\nimport Profile from './profile';\n\nconst items = [\n  {\n    route: \"contacts\",\n    label: \"Contacts\",\n    iconComponent: ContactsIcon,\n  },\n  {\n    route: \"messages\",\n    label: \"Messages\",\n    iconComponent: ChatIcon,\n  },\n]\n\nconst SideBar = ({ client, me, setNav, nav, signOut }) => (\n  <List sx={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"200px\",\n    minWidth: \"200px\",\n    background: \"#091c38\",\n    color: \"white\"\n  }}>\n    <Profile client={client} me={me} />\n\n    {items.map(i => {\n      const IconComponent = i.iconComponent;\n\n      return (\n        <ListItem key={i.route} disablePadding sx={{ background: nav === i.route ? 'rgba(255,255,255,0.1)' : 'transparent' }}>\n          <ListItemButton onClick={() => setNav(i.route)}>\n            <ListItemIcon>\n              <IconComponent sx={{ color: \"white\" }} />\n            </ListItemIcon>\n\n            <ListItemText>\n              {i.label}\n            </ListItemText>\n          </ListItemButton>\n        </ListItem>\n      )})}\n\n    <ListItem disablePadding sx={{ mt: \"auto\" }}>\n      <ListItemButton onClick={signOut}>\n        <ListItemIcon>\n          <LogoutIcon sx={{ color: \"white\" }} />\n        </ListItemIcon>\n\n        <ListItemText>\n          Log Out\n        </ListItemText>\n      </ListItemButton>\n    </ListItem>\n  </List>\n);\n\nexport default SideBar;\n","import { useState, useEffect, createContext, useContext } from \"react\";\nimport * as XMPP from \"stanza\";\nimport Amplify, { Auth, Hub } from \"aws-amplify\";\nimport {\n  Box,\n  Button,\n  TextField,\n  Divider,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\n\nimport \"./App.css\";\nimport Login from \"./login\";\nimport Roster from \"./roster\";\nimport SideBar from \"./sidebar\";\n\n// AWS Config\nconst REGION = \"us-east-1\";\nconst USER_POOL_ID = \"us-east-1_ESYPvGhN3\";\nconst USER_POOL_WEB_CLIENT_ID = \"5ai2feek1rgpso497om1kbj4ug\";\nconst API_BASE = \"https://saas-api.visionable.one\";\n\n// XMPP Config\nconst HOSTNAME = \"saas-msg.visionable.one\";\nconst PROTOCOL = \"wss\";\nconst PORT = \"5443\";\nconst ENDPOINT = \"ws-xmpp\";\n// const MUC_HOSTNAME = `muc.${HOSTNAME}`;\nconst MUC_LIGHT_HOSTNAME = `muclight.${HOSTNAME}`;\n\nAmplify.configure({\n  Auth: {\n    region: REGION,\n    userPoolId: USER_POOL_ID,\n    userPoolWebClientId: USER_POOL_WEB_CLIENT_ID,\n  },\n});\n\nconst resource = localStorage.getItem(\"xmpp-resource\") || crypto.randomUUID();\nlocalStorage.setItem(\"xmpp-resource\", resource);\n\nconst initXMPP = async (jid, password) =>\n  XMPP.createClient({\n    jid,\n    password,\n    resource,\n    transports: {\n      websocket: `${PROTOCOL}://${HOSTNAME}:${PORT}/${ENDPOINT}`,\n    },\n  });\n\nconst App = () => {\n  const [client, setClient] = useState(null);\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n  const [password, setPassword] = useState(\"Green12345!\");\n  const [jid, setJid] = useState(\"\");\n  const [jwt, setJwt] = useState(\"\");\n  const [online, setOnline] = useState(false);\n  // const [status, setStatus] = useState(\"\");\n  const [roster, setRoster] = useState([]);\n  const [presence, setPresence] = useState({});\n  // const [rosterNames, setRosterNames] = useState({});\n  const [incomingInvites, setIncomingInvites] = useState([]);\n  const [inviteResponses, setInviteResponses] = useState({});\n  // const [newName, setNewName] = useState(\"\");\n  // const [contactRequests, setContactRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [allUsers, setAllUsers] = useState([]);\n  const [nav, setNav] = useState(\"contacts\");\n  const [messages, setMessages] = useState({}); // { user: [message] }\n  const [roomMessages, setRoomMessages] = useState({}); // { room: [message] }\n  const [connected, setConnected] = useState(false);\n\n  const signIn = async () => {\n    setError(\"\");\n    setLoading(true);\n    localStorage.setItem(\"username\", username);\n\n    try {\n      const { username: uuid, signInUserSession: session } = await Auth.signIn(username, password);\n      window.Auth = Auth;\n      console.log(session);\n      const jwt = session.idToken.jwtToken;\n      setJwt(jwt);\n      const jid = `${uuid}@${HOSTNAME}`;\n      setJid(jid);\n      const xmpp = await initXMPP(jid, jwt);\n\n      console.log(jid, jwt)\n\n      setClient(xmpp);\n      setLoading(false);\n      setConnected(true);\n\n      const cognitoUsers = await getAllUsers(jwt);\n      const extendedUsers = cognitoUsers.map((u) => ({ ...u, name: userFullName(u) }));\n      setAllUsers(extendedUsers);\n\n      window.client = xmpp;\n\n      xmpp.on(\"session:started\", async () => {\n        xmpp.sendPresence();\n        xmpp.enableKeepAlive();\n        xmpp.enableCarbons();\n        setOnline(true);\n\n        const roster = (await xmpp.getRoster()).items;\n        setRoster(roster);\n        setMessages({});\n        setRoomMessages({});\n\n        roster.forEach((r) => {\n          // xmpp.searchHistory({ with: r.jid });\n          xmpp.searchHistory({ with: r.jid, paging: { before: \"\" }});\n        });\n      });\n\n      // TODO: inject the messages with the names\n      xmpp.on(\"message\", (message) => {\n        if (message.type === 'meeting-invite') {\n          setIncomingInvites((prev) => [...prev, message]);\n        } else if (message.type === \"chat\") {\n          const [from] = message.from.split(\"/\");\n          setMessages((prev) => ({\n            ...prev,\n            [from]: [\n              ...(prev[from] || []),\n              message,\n            ],\n          }));\n        } else if (message.type === \"groupchat\") {\n          // TODO: DRY up this code, same as regular chat?\n          const [room, user] = message.from.split(\"/\");\n          console.log(\"GOT A GROUPCHAT\", room, user);\n          setMessages((prev) => ({\n            ...prev,\n            [room]: [\n              ...(prev[room] || []),\n              message,\n            ],\n          }));\n        }\n      });\n\n      xmpp.on(\"message:sent\", (message) => {\n        if (message.type === 'meeting-invite') {\n          // TODO: display something in the chat\n        } else if (message.type === \"chat\") {\n          const [to] = message.to.split(\"/\");\n          setMessages((prev) => ({\n            ...prev,\n            [to]: [\n              ...(prev[to] || []),\n              message,\n            ],\n          }));\n        } else if (message.type === \"groupchat\") {\n          // TODO: just seems to work??\n        }\n      });\n\n      xmpp.on(\"mam:item\", (mam) => {\n        // TODO groupchat ???\n        const message = mam.archive?.item?.message;\n        const { to, from } = message;\n        // console.log(\"MAM MESSAGE. to, from\", message, to, from);\n        const fullUser = to.includes(xmpp.config.jid) ? from : to;\n        // console.log(\"MAM USER KEY:\" + fullUser);\n        const [user] = fullUser.split(\"/\");\n        setMessages((prev) => ({\n          ...prev,\n          [user]: [\n            ...(prev[user] || []),\n            message,\n          ],\n        }));\n      });\n\n      // if someone subscribes to us, automatically subscribe back\n      xmpp.on(\"subscribe\", (data) => {\n        console.log(\"on subscribe\", data);\n        xmpp.subscribe(data.from);\n      });\n\n      // if someone adds you to a room, auto accept it\n      xmpp.on(\"muc:invite\", (data) => {\n        client.joinRoom(data.room);\n      });\n\n      xmpp.on(\"roster:update\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      // created or added to a room\n      xmpp.on(\"muc:available\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      // no longer in a room\n      xmpp.on(\"muc:unavailable\", async () =>\n        setRoster((await xmpp.getRoster()).items)\n      );\n\n      xmpp.on(\"presence\", (data) => {\n        // const type = data.type;\n        setPresence((prev) => ({ ...prev, [data.from]: data }))\n      });\n\n      /*\n      xmpp.on(\"available\", (data) => {\n        const jid = data.from.replace(/\\/.*$/, \"\");\n        setPresence((prev) => ({ ...prev, [jid]: 'Available' }));\n      });\n*/\n\n      xmpp.on(\"*\", async (type, data) => {\n        console.log(type, data);\n      });\n\n      // on disconnect, retry\n      xmpp.on(\"disconnected\", () => {\n        setConnected(false);\n        // setTimeout(xmpp.connect, 3000)\n      })\n\n      xmpp.on(\"connected\", () => {\n        setConnected(true);\n      })\n\n      xmpp.connect();\n    } catch (e) {\n      console.error(\"caught\", e);\n      setLoading(false);\n      setError(e.message);\n    }\n  };\n\n  // TODO: re-authenticate when our JWT refreshes\n  useEffect(() => {\n    Hub.listen('auth', async (data) => {\n      if (data.payload.event === \"tokenRefresh\") {\n        console.log(\"token refreshed\", data);\n        client.config.credentials.password = (await Auth.currentSession()).idToken.jwtToken;\n\n        client.connect();\n      }\n    });\n  }, []);\n\n  // console.log('new presence list', presence);\n  // console.log('messages', messages);\n\n  // extend the roster with info from the User API, presence, etc.\n  const extendedRoster = roster.map(r => {\n    const user = allUsers.find(u => r.jid.includes(u.user_id));\n    const name = r.name // if the roster item has a name\n      ? r.name // use that\n      : user // otherwise, if there's a corresponding user from the User API\n        ? userFullName(user) // get the name of that\n        : r.jid;// otherwise, just show their JID\n\n    // grab all of the resources that we've been given presence for this user\n    const resources = Object.values(presence)\n      .filter((p) => p.from.includes(r.jid))\n      .map((u) => u.from.split(\"/\")?.[1]);\n\n    return {\n      ...r,\n      user,\n      name, \n      resources,\n      isRoom: !!r.groups?.[0]?.includes(\"muc\"),\n    };\n  });\n\n  console.log(\"extended roster\", extendedRoster);\n\n  // find my own user from the User API\n  const me = allUsers.find((u) => client.jid.match(u.user_id));\n\n  // const addContact = () => client.subscribe(newContact);\n\n  const reconnect = async () => {\n    client.config.credentials.password = (await Auth.currentSession()).idToken.jwtToken;\n    client.connect();\n  };\n\n  /*\n  const acceptSubscription = (id) => {\n    client.acceptSubscription(id);\n    client.subscribe(id);\n  };\n  const denySubscription = (id) => client.denySubscription(id);\n\n  const removeContact = async (jid) => {\n    await client.removeRosterItem(jid);\n    await client.unsubscribe(jid);\n  };\n*/\n\n  const signOut = async () => {\n    client.disconnect();\n    setOnline(false);\n    setConnected(false);\n    setRoster([]);\n    setPresence({});\n    // setContactRequests([]);\n    setMessages({});\n    setRoomMessages({});\n\n    try {\n      await Auth.signOut();\n    } catch (error) {\n      console.log(\"error signing out: \", error);\n    }\n  };\n\n  const acceptInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"accept\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-accept' });\n  };\n\n  const rejectInvite = (message) => {\n    setInviteResponses((prev) => ({ ...prev, [message.id]: \"reject\" }))\n    client.sendMessage({ to: message.from, body: message.id, type: 'meeting-invite-reject' });\n  };\n\n  /*\n  const sendStatus = () => {\n    client.sendPresence({ status });\n  };\n*/\n\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n    setError(null);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n    setError(null);\n  };\n\n  /*\n  const changeName = () => {\n    client.publishVCard({ fullName: newName });\n  };\n\n  const getVCard = async () => {\n    try {\n      const card = await client.getVCard(jid);\n      console.log(\"my card\", card);\n      setNewName(card?.fullName);\n    } catch (e) {\n      console.error(\"Error getting vcard\", e);\n    }\n  };\n*/\n\n  /*\n  const getMUCRooms = async () => {\n    const res = await client.getDiscoItems(MUC_HOSTNAME);\n  }\n\n  const getMUCLightRooms = async () => {\n    const res = await client.getDiscoItems(MUC_LIGHT_HOSTNAME);\n  }\n*/\n\n  /*\n  const uploadFile = (e) => {\n    Array.from(e.target.files).forEach(async (f) => {\n      const { name, size, type: mediaType } = f; // TODO files with spaces in name fail\n      console.log('file', name, size, mediaType);\n      const service = await client.getUploadService();\n      console.log('service', service);\n      const slot = await client.getUploadSlot(service.jid, { name, size, mediaType })\n      console.log('slot', slot);\n      const { download: downloadUrl, upload: { url: uploadUrl } } = slot;\n      console.log('got urls', downloadUrl, uploadUrl);\n      const res = await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: f,\n        headers: { \"x-amz-acl\": \"public-read\" },\n      });\n      console.log('res', res);\n\n      if (to) { // send notification\n        client.sendMessage({ to, body: downloadUrl, type: 'file-upload' });\n      }\n    })\n  }\n*/\n\n  if (!online) {\n    return (\n      <div className=\"App\">\n        <Login loading={loading} username={username} onChangeUsername={onChangeUsername} password={password} onChangePassword={onChangePassword} error={error} signIn={signIn} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <SideBar nav={nav} setNav={setNav} signOut={signOut} client={client} me={me} />\n\n      <Snackbar\n        onClick={reconnect}\n        open={!connected}\n        anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n        sx={{ cursor: \"pointer\" }}\n      >\n        <Alert severity=\"error\" sx={{ width: '100%' }}>Disconnected. Click here to reconnect</Alert>\n      </Snackbar>\n\n      <IncomingInvites\n        accept={acceptInvite}\n        reject={rejectInvite}\n        invites={incomingInvites}\n        responses={inviteResponses} />\n\n      <Box className=\"main\">\n        {nav === 'contacts'\n          ? <Roster\n              roster={extendedRoster}\n              // presence={presence}\n              allUsers={allUsers}\n              messages={messages}\n              roomMessages={roomMessages}\n              client={client}\n              API_BASE={API_BASE}\n              MUC_LIGHT_HOSTNAME={MUC_LIGHT_HOSTNAME}\n              jwt={jwt}\n              me={me}\n            />\n          : nav === 'messages'\n            ? <div>Messages</div>\n            : null}\n      </Box>\n    </div>\n  );\n};\n\nconst IncomingInvites = ({ accept, reject, invites, responses }) =>\n  invites.filter((m) => !responses[m.id]).map((m) => (\n    <Dialog key={m.id} open={true}>\n      <DialogTitle>Meeting Invite</DialogTitle>\n      <DialogContent>\n        <p>Invite ID: {m.id}</p>\n        <p>From: {m.from}</p>\n        <p>Meeting ID: {m.body}</p>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"error\" onClick={() => reject(m)}>Reject</Button>\n        <Button onClick={() => accept(m)}>Accept</Button>\n      </DialogActions>\n    </Dialog>\n  ));\n\nconst getAllUsers = async (jwt) => {\n  const res = await fetch(`${API_BASE}/api/user`, { headers: { Authorization: jwt } });\n  return res.ok ? res.json() : [];\n}\n\nfunction userFullName(user) {\n  return user?.name\n  ? user.name\n    : user?.user_displayname\n      ? user.user_displayname\n      : user?.user_firstname\n        ? `${user.user_firstname} ${user.user_lastname}`\n        : \"[No Name]\";\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}